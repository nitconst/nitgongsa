{"version":3,"sources":["fbase.js","routes/Auth.js","components/RegisterFactory.js","components/Register.js","components/GongsaStatus.js","components/GongsaList.js","components/ExportExcel.js","components/ReadGongsa.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","App.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","authService","getAnalytics","getAuth","dbService","getFirestore","storageService","getStorage","Auth","useState","phoneNumber","setPhonenumber","codeNumber","setCodeNumber","isSendSMS","setIsSendSms","appVerifier","window","recaptchaVerifier","defaultOptions","loop","autoplay","animationData","mainAnimationData","rendererSettings","preserveAspectRatio","onChanged","event","target","name","value","useEffect","RecaptchaVerifier","size","callback","response","className","options","height","width","type","placeholder","onChange","onClick","preventDefault","languageCode","signInWithPhoneNumber","then","confirmationResult","catch","error","console","log","required","confirm","result","user","id","Geocode","setApiKey","setLanguage","setRegion","enableDebug","RegisterFactory","userObj","codeNum","gongsa","setGongsa","attachment","setAttachment","date","setDate","GPSla","setGPSLa","GPSlong","setGPSLong","address","setAddress","arr","setArr","isImgMeta","setIsImgMeta","load","setLoad","admin","meta","useRef","onSubmit","a","attachmentUrl","attachmentRef","ref","uid","uuidv4","uploadString","getDownloadURL","alert","location","reload","undefined","test","code","region","key","gongsaObj","text","createdAt","GPSLatitude","GPSLongitude","addr","docKey","phone","displayName","createdId","regioncode","StateAdmin","setDoc","doc","onFileChange","files","theFile","Blob","reader","FileReader","maxSizeMB","maxWidthOrHeight","useWebWorker","imageCompression","compressedFile","onloadend","finishedEvent","currentTarget","readAsDataURL","current","EXIF","getData","exifData","pretty","this","gpsLa","getTag","gpsLaRef","gpsLong","gpsLongRef","la","long","b","i","length","numerator","denominator","dateFirst","split","replaceAll","dateLast","substring","parseInt","parseFloat","setFileData","onClearAttachment","fromLatLng","String","city","state","country","results","formatted_address","substr","address_components","element","j","types","long_name","fileInput","find","loadingAnimationData","htmlFor","accept","src","Register","isHiding","setIsHiding","prev","GongsaStatus","styled","img","GongsaList","isOwner","isEditing","setIsEditing","textEdit","setTextEdit","isDetail","setIsDetail","selectedItem","setSelectedItem","setDocKey","status","handleCancle","index","deleteDoc","deleteObject","handleFileChange","handleSubmit","updateDoc","Number","onChangeHandler","e","codeModifying","toggleEditing","toggleDetail","alt","map","item","ExportExcel","gongsaList","setGongsaList","ExcelFile","ReactExport","ExcelSheet","ExcelColumn","getGongsaList","str","charAt","q","query","collection","orderBy","startAt","endAt","getDocs","querySnapshot","querySnapshotArray","forEach","push","data","where","label","ReadGongsa","isPc","setIsPC","queryObject","setQueryObject","usePagination","limit","items","isStart","isLoading","isEnd","getPrev","getNext","getGongsaData","indexOf","navigator","platform","toLocaleLowerCase","getGongsaDataByRegion","disabled","Home","onSnapshot","snapshot","gongsaArr","docs","Profile","newDisplayName","setNewDisplayName","myGongsa","setMyGongsa","querySnapShot","replace","onLogOutClick","signOut","Navigation","style","display","justifyContent","paddingTop","marginRight","to","flexDirection","alignItems","AppRouter","isLoggedIn","refreshUser","path","exact","App","init","setInit","setUserObj","setIsLoggedIn","onAuthStateChanged","currentUser","ReactGA","initialize","process","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.cc4b2a09.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { getStorage } from \"firebase/storage\";\nimport { getAnalytics } from \"firebase/analytics\";\n\n// push testing\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDFJzAEwTuo4my8nQ4fsIS_ktyXv2YhN4g\",\n  authDomain: \"gongsa-d233a.firebaseapp.com\",\n  projectId: \"gongsa-d233a\",\n  storageBucket: \"gongsa-d233a.appspot.com\",\n  messagingSenderId: \"772155270923\",\n  appId: \"1:772155270923:web:d64c6b9118ca3cfee8640e\",\n  measurementId: \"G-7F6MDW2NBE\",\n};\n\nconst app = initializeApp(firebaseConfig);\nconst analytics = getAnalytics(app);\n\nexport const authService = getAuth();\nexport const dbService = getFirestore();\nexport const storageService = getStorage();\n","import React, { useEffect, useState } from \"react\";\nimport { authService } from \"fbase\";\nimport { RecaptchaVerifier, signInWithPhoneNumber } from \"firebase/auth\";\nimport Lottie from \"react-lottie\";\nimport mainAnimationData from \"lotties/auth-construction.json\";\n\nconst Auth = () => {\n  const [phoneNumber, setPhonenumber] = useState(\"\");\n  const [codeNumber, setCodeNumber] = useState(\"\");\n  const [isSendSMS, setIsSendSms] = useState(\"\");\n  const appVerifier = window.recaptchaVerifier;\n  const phoneNumberTest = \"+16505551234\";\n  const testVerificationCode = \"123456\";\n\n  const defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: mainAnimationData,\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid slice\",\n    },\n  };\n\n  const onChanged = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"phone\") {\n      setPhonenumber(value);\n    } else if (name === \"code\") {\n      setCodeNumber(value);\n    }\n  };\n  useEffect(() => {\n    window.recaptchaVerifier = new RecaptchaVerifier(\n      \"recaptcha-container\",\n      {\n        size: \"invisible\",\n        callback: (response) => {\n          // reCAPTCHA solved, allow signInWithPhoneNumber.\n        },\n      },\n      authService\n    );\n  }, []);\n  const onSubmit = (event) => {\n    event.preventDefault();\n    authService.languageCode = \"ko\";\n    // window.recaptchaVerifier = new RecaptchaVerifier(\n    //   \"recaptcha-container\",\n    //   {},\n    //   authService\n    // );\n    signInWithPhoneNumber(authService, \"+82\" + phoneNumber, appVerifier)\n      .then((confirmationResult) => {\n        setIsSendSms(true);\n        // SMS sent. Prompt user to type the code from the message, then sign the\n        // user in with confirmationResult.confirm(code).\n        window.confirmationResult = confirmationResult;\n        // ...\n      })\n      .catch((error) => {\n        console.log(error);\n        // Error; SMS not sent\n        // ...\n      });\n    // signInWithPhoneNumber(authService, phoneNumberTest, appVerifier)\n    //   .then(function (confirmationResult) {\n    //     // confirmationResult can resolve with the fictional testVerificationCode above.\n    //     return confirmationResult.confirm(testVerificationCode);\n    //   })\n    //   .catch(function (error) {\n    //     // Error; SMS not sent\n    //     // ...\n    //   });\n  };\n\n  const onCodeConfirmClick = (event) => {\n    window.confirmationResult\n      .confirm(codeNumber)\n      .then((result) => {\n        // User signed in successfully.\n        const user = result.user;\n        //console.log(user);\n        // ...\n      })\n      .catch((error) => {\n        //console.log(error);\n        // User couldn't sign in (bad verification code?)\n        // ...\n      });\n  };\n  return (\n    <>\n      <div className=\"auth-container\">\n        <div className=\"content\">\n          <h1>사외공사 간편신고 웹</h1>\n        </div>\n        <Lottie options={defaultOptions} height={200} width={200} />\n        <div className=\"field is-grouped\">\n          <p className=\"control is-expanded\">\n            <input\n              className=\"input\"\n              name=\"phone\"\n              type=\"phone\"\n              placeholder=\"'-'없이 입력'\"\n              value={phoneNumber}\n              onChange={onChanged}\n            />\n          </p>\n          <p className=\"control\">\n            <a className=\"button is-link is-rounded\" onClick={onSubmit}>\n              로그인\n            </a>\n          </p>\n        </div>\n\n        <>\n          {isSendSMS && (\n            <div className=\"field is-grouped\">\n              <p className=\"control is-expanded\">\n                <input\n                  className=\"input\"\n                  name=\"code\"\n                  type=\"text\"\n                  placeholder=\"인증번호\"\n                  required\n                  value={codeNumber}\n                  onChange={onChanged}\n                />\n              </p>\n              <p className=\"control\">\n                <a\n                  className=\"button is-dark is-rounded\"\n                  onClick={onCodeConfirmClick}\n                >\n                  인증번호확인\n                </a>\n              </p>\n            </div>\n          )}\n        </>\n        <div id=\"recaptcha-container\"></div>\n      </div>\n    </>\n  );\n};\n\nexport default Auth;\n","// Register 폼 Component\nimport React, { useRef, useState } from \"react\";\nimport { dbService, storageService } from \"../fbase\";\nimport { setDoc, doc } from \"firebase/firestore\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport EXIF from \"exif-js\";\nimport { ref, uploadString, getDownloadURL } from \"firebase/storage\";\nimport Geocode from \"react-geocode\";\nimport imageCompression from \"browser-image-compression\";\nimport Lottie from \"react-lottie\";\nimport loadingAnimationData from \"lotties/loading-construction.json\";\nimport { set } from \"react-ga\";\n\nGeocode.setApiKey(\"AIzaSyBIWmLYzIJmYLxLoRsHchr0OAErLWpKcyI\");\nGeocode.setLanguage(\"ko\");\nGeocode.setRegion(\"kr\");\nGeocode.enableDebug();\n\nconst RegisterFactory = ({ userObj, codeNum }) => {\n  const [gongsa, setGongsa] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n  const [date, setDate] = useState(\"\"); //시각\n  const [GPSla, setGPSLa] = useState([]); //위도\n  const [GPSlong, setGPSLong] = useState([]); //경도\n  const [address, setAddress] = useState(\"\"); //주소변환\n  const [arr, setArr] = useState([]); //지역변환\n  const [isImgMeta, setIsImgMeta] = useState(false); //메타데이터\n  const [load, setLoad] = useState(true); //로딩표시\n  const [admin, setAdmin] = useState(\"\"); //처리자표시\n  const meta = useRef(null);\n\n  //submit 버튼 클릭 시 이벤트\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    let attachmentUrl = \"\";\n\n    if (attachment !== \"\" || address !== \"\") {\n      setLoad(false);\n      const attachmentRef = ref(storageService, `${userObj.uid}/${uuidv4()}`);\n      const response = await uploadString(\n        attachmentRef,\n        attachment,\n        \"data_url\"\n      );\n      attachmentUrl = await getDownloadURL(response.ref);\n    } //attachment 유효성검사\n    else {\n      alert(\"위치 기반 이미지 파일 등록은 필수입니다.\");\n      window.location.reload();\n    }\n\n    //지역코드 유효성검사\n    if (test == undefined) {\n      test = {\n        code: \"999\",\n        region: \"기타\",\n      };\n    }\n\n    //게시글 삭제,수정을 위한 고유키 값 부여\n    const key = uuidv4();\n\n    //DB저장 필드\n    const gongsaObj = {\n      text: gongsa,\n      createdAt: date,\n      GPSLatitude: GPSla,\n      GPSLongitude: GPSlong,\n      addr: address,\n      docKey: key,\n      phone: userObj.displayName,\n      createdId: userObj.uid,\n      attachmentUrl,\n      code: 0, //처리코드\n      regioncode: test.code, //지역코드\n      StateAdmin: admin,\n    };\n\n    //key값 부여를 위한 addDoc에서 setDoc으로 함수 변경\n    await setDoc(doc(dbService, \"gongsa\", key), gongsaObj);\n    setGongsa(\"\");\n    setAttachment(\"\");\n\n    window.location.reload();\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setGongsa(value);\n  };\n\n  //file(사진) 등록 시 event\n  const onFileChange = async (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0]; //파일 읽는 상수 선언\n    console.log(\"originalFile instanceof Blob\", theFile instanceof Blob); // true\n    console.log(`originalFile size ${theFile.size / 1024 / 1024} MB`);\n\n    const reader = new FileReader(); //web에 불러오는 상수 선언\n\n    //resize 함수 작성\n    const options = {\n      maxSizeMB: 1,\n      maxWidthOrHeight: 1920,\n      useWebWorker: true,\n    };\n\n    try {\n      const compressedFile = await imageCompression(theFile, options);\n      console.log(\n        \"compressedFile instanceof Blob\",\n        compressedFile instanceof Blob\n      ); // true\n      console.log(\n        `compressedFile size ${compressedFile.size / 1024 / 1024} MB`\n      ); // smaller than maxSizeMB\n      reader.onloadend = (finishedEvent) => {\n        const {\n          currentTarget: { result },\n        } = finishedEvent;\n\n        setAttachment(result);\n      };\n      reader.readAsDataURL(compressedFile);\n      meta.current = compressedFile;\n    } catch (error) {\n      console.log(error);\n    }\n\n    //메타데이터 추출\n    if (theFile && theFile.name) {\n      console.log(theFile);\n      EXIF.getData(theFile, function () {\n        let exifData = EXIF.pretty(this);\n        let gpsLa = EXIF.getTag(this, \"GPSLatitude\");\n        let gpsLaRef = EXIF.getTag(this, \"GPSLatitudeRef\");\n        let gpsLong = EXIF.getTag(this, \"GPSLongitude\");\n        let gpsLongRef = EXIF.getTag(this, \"GPSLongitudeRef\");\n\n        let la = [];\n        let long = [];\n\n        //위경도 api 연동 변수\n        let a = \"\";\n        let b = \"\";\n\n        if (gpsLa) {\n          //exifdata 존재 시 gps 계산 수행\n          console.log(exifData);\n          console.log(gpsLa);\n          console.log(gpsLong);\n          for (let i = 0; i < gpsLa.length; i++) {\n            la[i] = gpsLa[i].numerator / gpsLa[i].denominator;\n          }\n          for (let i = 0; i < gpsLong.length; i++) {\n            long[i] = gpsLong[i].numerator / gpsLong[i].denominator;\n          }\n\n          //값 확인 콘솔\n          console.log(la, long, gpsLaRef, gpsLongRef);\n\n          //사진 시각 정보 설정\n          const dateFirst = EXIF.getTag(this, \"DateTime\")\n            .split(\" \")[0]\n            .replaceAll(\":\", \"-\");\n          const dateLast = EXIF.getTag(this, \"DateTime\")\n            .split(\" \")[1]\n            .substring(-1, 5);\n          setDate(dateFirst + \" \" + dateLast);\n\n          //ref 조건 별 위경도 계산\n          if (gpsLaRef == \"N\") {\n            a =\n              parseInt(la[0]) +\n              (60 * parseInt(la[1]) + parseFloat(la[2])) / 3600;\n          } else {\n            a =\n              -1 * parseInt(la[0]) +\n              (-60 * parseInt(la[1]) + -1 * parseFloat(la[2])) / 3600;\n          }\n          setGPSLa(a);\n\n          if (gpsLongRef == \"E\") {\n            b =\n              parseInt(long[0]) +\n              (60 * parseInt(long[1]) + parseFloat(long[2])) / 3600;\n          } else {\n            b =\n              -1 * parseInt(long[0]) +\n              (-60 * parseInt(long[1]) + -1 * parseFloat(long[2])) / 3600;\n          }\n          setGPSLong(b);\n          setIsImgMeta(true);\n          setFileData(a, b);\n        } else {\n          console.log(date);\n          alert(\n            \"[오류] 사진의 위치정보가 존재하지 않습니다.\\n\\n ㅇ 위치기반 재촬영 방법 \\n Android : 1. 설정>위치>사용 활성화 \\n 2. 카메라>좌측 톱니바퀴 아이콘>위치 태그 활성화 \\n iOS : 설정>카메라>포맷>높은 호환성>재촬영 후 사진 보관함에서 사진 선택\"\n          );\n          onClearAttachment();\n          // window.location.reload();\n        }\n        //위경도 기반 주소변환 실행\n      });\n    }\n  };\n\n  //주소변환함수\n  const setFileData = (a, b) => {\n    console.log(GPSla, GPSlong);\n    Geocode.fromLatLng(String(a), String(b)).then(\n      (response) => {\n        //대한민국 제외 주소 DB 저장\n        setAddress(response.results[0].formatted_address.substr(5));\n        let city, state, country;\n        // let add = response.results[0].formatted_address;\n        // let result = add.substr(5);\n        // console.log(result);\n        for (const element of response.results[0].address_components) {\n          for (let j = 0; j < element.types.length; j++) {\n            switch (element.types[j]) {\n              case \"locality\":\n                city = element.long_name;\n                break;\n              case \"administrative_area_level_1\":\n                state = element.long_name;\n                break;\n              case \"country\":\n                country = element.long_name;\n                break;\n            }\n          }\n          console.log(element);\n        }\n\n        //배열에 공백 단위로 주소 나눠넣기\n        setArr(response.results[0].formatted_address.split(\" \"));\n        console.log(city, state, country);\n      },\n      (error) => {\n        console.error(error);\n      }\n    );\n  };\n\n  //clear 버튼 클릭 시\n  const onClearAttachment = () => {\n    setAttachment(\"\");\n    setGongsa(null);\n    setIsImgMeta(false);\n    setAddress(\"\");\n    fileInput.current.value = null;\n  };\n\n  const fileInput = useRef();\n\n  //code 찾기\n  let test = codeNum.find((codeNum) => {\n    return codeNum.region === arr[2];\n  });\n\n  const defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: loadingAnimationData,\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid slice\",\n    },\n  };\n\n  return (\n    <>\n      {load ? (\n        <div>\n          <hr className=\"hr-main\" />\n          <form className=\"boxForm\" onSubmit={onSubmit}>\n            <label htmlFor=\"attach-file\" className=\"imgLabel\">\n              <span>사진 추가 </span>\n              <span className=\"icon\">\n                <i className=\"fas fa-plus\"></i>\n              </span>\n            </label>\n            <input\n              id=\"attach-file\"\n              className=\"img-hide\"\n              type=\"file\"\n              accept=\"image/*\"\n              onChange={onFileChange}\n              ref={fileInput}\n            />\n            {attachment && (\n              <div>\n                <img src={attachment} className=\"reg-temp-img\" />\n                <button\n                  className=\"button is-small is-rounded\"\n                  onClick={onClearAttachment}\n                >\n                  Clear\n                </button>\n              </div>\n            )}\n            <textarea\n              className=\"textarea is-small\"\n              value={gongsa}\n              onChange={onChange}\n              type=\"text\"\n              placeholder=\"공사관련 메모\"\n            />\n            <input\n              className=\"button is-link is-rounded reg-btn\"\n              type=\"submit\"\n              value=\"등록\"\n            />\n            {isImgMeta && (\n              <>\n                <hr />\n                <div className=\"content is-small\">\n                  <h4>주소</h4>\n                  <p>{address}</p>\n                  <h4>시간</h4>\n                  <p>{date}</p>\n                </div>\n              </>\n            )}\n          </form>\n        </div>\n      ) : (\n        <div className=\"auth-container\">\n          <Lottie options={defaultOptions} height={200} width={200} />\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default RegisterFactory;\n\n//hi\n","import React, { useState } from \"react\";\nimport RegisterFactory from \"./RegisterFactory\";\n\nconst Register = ({ userObj, codeNum }) => {\n  const [isHiding, setIsHiding] = useState(false);\n  // box 숨기기 toggle\n  const toggleHide = () => {\n    setIsHiding((prev) => !prev);\n  };\n\n  return (\n    <div className=\"content\">\n      <div className=\"box\">\n        <div className=\"box-header\">\n          <span className=\"icon\">\n            <i className=\"fa-solid fa-pen is-large\"></i>\n          </span>\n          <p className=\"box-header-text\">공사정보 간편신고</p>\n          <div className=\"div-arrow\" onClick={toggleHide}>\n            <span className=\"icon\">\n              {isHiding ? (\n                <>\n                  <i className=\"fa-solid fa-angle-down\" />\n                </>\n              ) : (\n                <>\n                  <i className=\"fa-solid fa-angle-right\" />\n                </>\n              )}\n            </span>\n          </div>\n        </div>\n        {isHiding && <RegisterFactory userObj={userObj} codeNum={codeNum} />}\n      </div>\n    </div>\n  );\n};\n\nexport default Register;\n","// 공사 처리상태 Component\nimport React from \"react\";\n\nconst GongsaStatus = ({ gongsaObj }) => {\n  switch (gongsaObj.code) {\n    case 0:\n      return <span className=\"tag is-warning\">신고</span>;\n    case 1:\n      return <span className=\"tag is-light\">처리 중</span>;\n    case 2:\n      return <span className=\"tag is-success\">조치완료</span>;\n    default:\n      return <h4>그냥 로그인</h4>;\n  }\n};\n\nexport default GongsaStatus;\n","import React, { useRef, useEffect, useState } from \"react\";\nimport { deleteDoc, updateDoc, doc } from \"firebase/firestore\";\nimport { dbService, storageService } from \"fbase\";\nimport styled from \"styled-components\";\nimport {\n  ref,\n  deleteObject,\n  uploadString,\n  getDownloadURL,\n} from \"firebase/storage\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport GongsaStatus from \"./GongsaStatus\";\nimport Geocode from \"react-geocode\";\nimport EXIF from \"exif-js\";\nimport imageCompression from \"browser-image-compression\";\nimport Lottie from \"react-lottie\";\nimport loadingAnimationData from \"lotties/loading-construction.json\";\n\nGeocode.setApiKey(\"AIzaSyBIWmLYzIJmYLxLoRsHchr0OAErLWpKcyI\");\nGeocode.setLanguage(\"ko\");\nGeocode.setRegion(\"kr\");\nGeocode.enableDebug();\n\nconst Img = styled.img`\n  height: 100px;\n  width: 60%;\n  border: none;\n`;\n\nconst GongsaList = ({ gongsaObj, isOwner, userObj, codeNum }) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [textEdit, setTextEdit] = useState(gongsaObj.text);\n  const [attachment, setAttachment] = useState(\"\");\n  const [isDetail, setIsDetail] = useState(false);\n  const [isHiding, setIsHiding] = useState(false);\n  const [selectedItem, setSelectedItem] = useState(gongsaObj.code);\n  const [docKey, setDocKey] = useState(\"\");\n  const [date, setDate] = useState(\"\"); //시각\n  const [GPSla, setGPSLa] = useState([]); //위도\n  const [GPSlong, setGPSLong] = useState([]); //경도\n  const [address, setAddress] = useState(gongsaObj.addr); //주소변환\n  const [arr, setArr] = useState(gongsaObj.addr.split(\" \")); //지역변환\n  const meta = useRef(null);\n  const [load, setLoad] = useState(true);\n\n  const code = [\n    { code: \"0\", status: \"신고\" },\n    { code: \"1\", status: \"처리 중\" },\n    { code: \"2\", status: \"조치완료\" },\n  ];\n\n  const defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: loadingAnimationData,\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid slice\",\n    },\n  };\n\n  //주소변환함수\n  const setFileData = (a, b) => {\n    Geocode.fromLatLng(String(a), String(b)).then(\n      (response) => {\n        //대한민국 제외 주소 DB 저장\n        setAddress(response.results[0].formatted_address.substr(5));\n        let city, state, country;\n        // let add = response.results[0].formatted_address;\n        // let result = add.substr(5);\n        // console.log(result);\n        for (const element of response.results[0].address_components) {\n          for (let j = 0; j < element.types.length; j++) {\n            switch (element.types[j]) {\n              case \"locality\":\n                city = element.long_name;\n                break;\n              case \"administrative_area_level_1\":\n                state = element.long_name;\n                break;\n              case \"country\":\n                country = element.long_name;\n                break;\n            }\n          }\n        }\n\n        //배열에 공백 단위로 주소 나눠넣기\n        setArr(response.results[0].formatted_address.split(\" \"));\n      },\n      (error) => {\n        console.error(error);\n      }\n    );\n  };\n  //삭제 기능\n  const handleCancle = async (key, index) => {\n    const ok = window.confirm(\"정말 삭제하시겠습니까?\");\n    if (ok) {\n      await deleteDoc(doc(dbService, \"gongsa\", key));\n      await deleteObject(ref(storageService, gongsaObj.attachmentUrl));\n      window.location.reload();\n    }\n  };\n\n  //수정 기능\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setTextEdit(value);\n  };\n\n  const handleFileChange = async (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    //resize 함수 작성\n    const options = {\n      maxSizeMB: 1,\n      maxWidthOrHeight: 1920,\n      useWebWorker: true,\n    };\n\n    try {\n      const compressedFile = await imageCompression(theFile, options);\n      console.log(\n        \"compressedFile instanceof Blob\",\n        compressedFile instanceof Blob\n      ); // true\n      console.log(\n        `compressedFile size ${compressedFile.size / 1024 / 1024} MB`\n      ); // smaller than maxSizeMB\n      reader.onloadend = (finishedEvent) => {\n        const {\n          currentTarget: { result },\n        } = finishedEvent;\n        setAttachment(result);\n      };\n      reader.readAsDataURL(compressedFile);\n      meta.current = compressedFile;\n    } catch (error) {}\n\n    //메타데이터 추출\n    if (theFile && theFile.name) {\n      EXIF.getData(theFile, function () {\n        let exifData = EXIF.pretty(this);\n        let gpsLa = EXIF.getTag(this, \"GPSLatitude\");\n        let gpsLaRef = EXIF.getTag(this, \"GPSLatitudeRef\");\n        let gpsLong = EXIF.getTag(this, \"GPSLongitude\");\n        let gpsLongRef = EXIF.getTag(this, \"GPSLongitudeRef\");\n\n        let la = [];\n        let long = [];\n\n        //위경도 api 연동 변수\n        let a = \"\";\n        let b = \"\";\n\n        if (gpsLa) {\n          //exifdata 존재 시 gps 계산 수행pl\n          for (let i = 0; i < gpsLa.length; i++) {\n            la[i] = gpsLa[i].numerator / gpsLa[i].denominator;\n          }\n          for (let i = 0; i < gpsLong.length; i++) {\n            long[i] = gpsLong[i].numerator / gpsLong[i].denominator;\n          }\n\n          //사진 시각 정보 설정\n          setDate(EXIF.getTag(this, \"DateTime\"));\n\n          //ref 조건 별 위경도 계산\n          if (gpsLaRef == \"N\") {\n            a =\n              parseInt(la[0]) +\n              (60 * parseInt(la[1]) + parseFloat(la[2])) / 3600;\n          } else {\n            a =\n              -1 * parseInt(la[0]) +\n              (-60 * parseInt(la[1]) + -1 * parseFloat(la[2])) / 3600;\n          }\n          setGPSLa(a);\n\n          if (gpsLongRef == \"E\") {\n            b =\n              parseInt(long[0]) +\n              (60 * parseInt(long[1]) + parseFloat(long[2])) / 3600;\n          } else {\n            b =\n              -1 * parseInt(long[0]) +\n              (-60 * parseInt(long[1]) + -1 * parseFloat(long[2])) / 3600;\n          }\n          setGPSLong(b);\n        } else {\n          alert(\n            \"[오류] 사진의 위치정보가 존재하지 않습니다.\\n\\n ㅇ 위치기반 재촬영 방법 \\n Android : 1. 설정>위치>사용 활성화 \\n 2. 카메라>좌측 톱니바퀴 아이콘>위치 태그 활성화 \\n iOS : 설정>카메라>포맷>높은 호환성>재촬영 후 사진 보관함에서 사진 선택\"\n          );\n          window.location.reload();\n        }\n        //위경도 기반 주소변환 실행\n        setFileData(a, b);\n      });\n    }\n    console.log(gongsaObj);\n  };\n\n  //업데이트 기능\n  const handleSubmit = async (key) => {\n    setLoad(false);\n    let attachmentUrl = \"\";\n    if (attachment !== \"\") {\n      await deleteObject(ref(storageService, gongsaObj.attachmentUrl));\n      const attachmentRef = ref(storageService, `${userObj.uid}/${uuidv4()}`);\n      const response = await uploadString(\n        attachmentRef,\n        attachment,\n        \"data_url\"\n      );\n      attachmentUrl = await getDownloadURL(response.ref);\n      console.log(attachmentUrl);\n\n      let test = codeNum.find((codeNum) => {\n        console.log(codeNum);\n        return codeNum.region === arr[2];\n      });\n      console.log(test);\n\n      if (test == undefined) {\n        test = {\n          code: \"999\",\n          region: \"기타\",\n        };\n      }\n\n      await updateDoc(doc(dbService, \"gongsa\", key), {\n        text: textEdit,\n        createdAt: date,\n        GPSLatitude: GPSla,\n        GPSLongitude: GPSlong,\n        addr: address,\n        docKey: key,\n        attachmentUrl: attachmentUrl,\n        code: selectedItem,\n        regioncode: test.code,\n      });\n    } else if (attachment === \"\") {\n      await updateDoc(doc(dbService, \"gongsa\", key), {\n        text: textEdit,\n        code: Number(selectedItem),\n      });\n    }\n\n    window.location.reload();\n  };\n\n  const onChangeHandler = (e, key) => {\n    setSelectedItem(e.currentTarget.value);\n    // select name이 detail인 경우 (모든 유저가 처리상태 수정하기 위한 부분)\n    if (e.target.name === \"detail\") {\n      setDocKey(gongsaObj.docKey);\n    }\n  };\n\n  // 처리상태 select값 바뀔 때 effect\n  useEffect(() => {\n    // detail인 경우만 처리상태 바로 수정, 아닌 경우는 수정버튼 눌렀을때 수정(handleSubmit 참조)\n    if (isDetail) {\n      codeModifying(docKey);\n    }\n  }, [selectedItem, docKey]);\n\n  // 처리상태 코드만 수정하는 부분\n  const codeModifying = async (key) => {\n    await updateDoc(doc(dbService, \"gongsa\", key), {\n      code: Number(selectedItem),\n    });\n  };\n  const toggleEditing = () => setIsEditing((prev) => !prev);\n  const toggleDetail = () => setIsDetail((prev) => !prev);\n\n  return (\n    <>\n      {load ? (\n        <div>\n          {isEditing ? (\n            <>\n              <div className=\"box edit-box\">\n                <div className=\"field\">\n                  <label className=\"label\">공사사진</label>\n                  <div>\n                    {attachment ? (\n                      <>\n                        <img src={attachment} className=\"reg-temp-img\" alt=\"\" />\n                      </>\n                    ) : (\n                      <>\n                        <img\n                          src={gongsaObj.attachmentUrl}\n                          className=\"reg-temp-img\"\n                          alt=\"\"\n                        />\n                      </>\n                    )}\n                  </div>\n                  <label htmlFor=\"edit-file\" className=\"imgLabel\">\n                    <span>사진 변경 </span>\n                    <span className=\"icon\">\n                      <i className=\"fas fa-edit\"></i>\n                    </span>\n                  </label>\n                  <input\n                    id=\"edit-file\"\n                    className=\"img-hide\"\n                    type=\"file\"\n                    accept=\"image/*\"\n                    onChange={handleFileChange}\n                  />\n                </div>\n                <div className=\"field\">\n                  <label className=\"label\">주소</label>\n                  <div className=\"control has-icons-left has-icons-right\">\n                    <input\n                      className=\"input is-small\"\n                      type=\"text\"\n                      placeholder=\"Text input\"\n                      value={address}\n                    />\n                    <span className=\"icon is-small is-left\">\n                      <i className=\"fas fa-addr\"></i>\n                    </span>\n                    <span className=\"icon is-small is-right\">\n                      <i className=\"fas fa-check\"></i>\n                    </span>\n                  </div>\n                  <p className=\"help is-success is-small\">\n                    주소는 사진에 저장된 위치데이터 기반으로 자동생성됩니다.\n                  </p>\n                </div>\n                <div className=\"field\">\n                  <label className=\"label\">처리상태</label>\n                  <div className=\"control\">\n                    <div className=\"select is-small\">\n                      <select\n                        value={selectedItem}\n                        onChange={(e) => onChangeHandler(e, gongsaObj.docKey)}\n                      >\n                        {code.map((item, index) => (\n                          <option key={item.code} value={item.code}>\n                            {item.status}\n                          </option>\n                        ))}\n                      </select>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"field\">\n                  <label className=\"label\">공사메모</label>\n                  <div className=\"control\">\n                    <textarea\n                      className=\"textarea is-small\"\n                      placeholder=\"공사메모 입력\"\n                      onChange={onChange}\n                      value={textEdit}\n                    ></textarea>\n                  </div>\n                </div>\n                <div className=\"field is-grouped\">\n                  <div className=\"control\">\n                    <button\n                      className=\"button is-link is-rounded\"\n                      onClick={() => {\n                        handleSubmit(gongsaObj.docKey);\n                      }}\n                    >\n                      수정\n                    </button>\n                  </div>\n                  <div className=\"control\">\n                    <button\n                      className=\"button is-link is-rounded is-light\"\n                      onClick={toggleEditing}\n                    >\n                      취소\n                    </button>\n                  </div>\n                </div>\n              </div>\n              <hr />\n            </>\n          ) : (\n            <>\n              <article className=\"media\">\n                {isDetail ? (\n                  <div className=\"content is-small content-detail\">\n                    <div className=\"div-arrow\" onClick={toggleDetail}>\n                      <span className=\"icon\">\n                        {isDetail ? (\n                          <>\n                            <i className=\"fa-solid fa-lg fa-angle-down\" />\n                          </>\n                        ) : (\n                          <>\n                            <i className=\"fa-solid fa-lg fa-angle-right\" />\n                          </>\n                        )}\n                      </span>\n                    </div>\n                    <h4>공사사진</h4>\n                    <img src={gongsaObj.attachmentUrl} alt=\"\" />\n                    <h4>주소</h4>\n                    <p>{gongsaObj.addr}</p>\n                    <h4>처리상태</h4>\n\n                    <div className=\"control\">\n                      <div className=\"select is-small\">\n                        <select\n                          value={selectedItem}\n                          name=\"detail\"\n                          onChange={(e) => onChangeHandler(e, gongsaObj.docKey)}\n                        >\n                          {code.map((item, index) => (\n                            <option key={item.code} value={item.code}>\n                              {item.status}\n                            </option>\n                          ))}\n                        </select>\n                      </div>\n                    </div>\n                    <h4>공사메모</h4>\n                    <p>{gongsaObj.text}</p>\n                  </div>\n                ) : (\n                  <>\n                    <figure className=\"media-left\">\n                      <GongsaStatus gongsaObj={gongsaObj} />\n                    </figure>\n                    <div className=\"media-content\">\n                      <div className=\"content content-gongsa\">\n                        <p>\n                          <strong>{gongsaObj.addr}</strong>\n                        </p>\n                        <div className=\"div-arrow\" onClick={toggleDetail}>\n                          <span className=\"icon\">\n                            {isDetail ? (\n                              <>\n                                <i className=\"fa-solid fa-angle-down\" />\n                              </>\n                            ) : (\n                              <>\n                                <i className=\"fa-solid fa-angle-right\" />\n                              </>\n                            )}\n                          </span>\n                        </div>\n                      </div>\n                      {isOwner ? (\n                        <>\n                          <nav className=\"level is-mobile\">\n                            <div className=\"level-left\">\n                              <a className=\"level-item\">\n                                <span className=\"icon is-small\">\n                                  <i\n                                    className=\"fas fa-lg fa-edit\"\n                                    onClick={toggleEditing}\n                                  ></i>\n                                </span>\n                              </a>\n                              <a className=\"level-item\">\n                                <span className=\"icon is-small\">\n                                  <i\n                                    className=\"fas fa-lg fa-trash\"\n                                    onClick={() => {\n                                      handleCancle(gongsaObj.docKey);\n                                    }}\n                                  ></i>\n                                </span>\n                              </a>\n                            </div>\n                            <div className=\"level-right\">\n                              <div className=\"level-item\">\n                                <label className=\"checkbox\">\n                                  <small className=\"time-small\">\n                                    {gongsaObj.createdAt}\n                                  </small>\n                                </label>\n                              </div>\n                            </div>\n                          </nav>\n                        </>\n                      ) : (\n                        <nav className=\"level is-mobile\">\n                          <div className=\"level-left\"></div>\n                          <div className=\"level-right\">\n                            <div className=\"level-item\">\n                              <label className=\"checkbox\">\n                                <small className=\"time-small\">\n                                  {gongsaObj.createdAt}\n                                </small>\n                              </label>\n                            </div>\n                          </div>\n                        </nav>\n                      )}\n                    </div>\n                  </>\n                )}\n              </article>\n              <hr />\n            </>\n          )}\n        </div>\n      ) : (\n        <div className=\"auth-container\">\n          <Lottie options={defaultOptions} height={200} width={200} />\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default GongsaList;\n","import {\n  collection,\n  endAt,\n  getDocs,\n  orderBy,\n  query,\n  startAt,\n  where,\n} from \"@firebase/firestore\";\nimport { dbService } from \"fbase\";\nimport React, { useEffect, useState } from \"react\";\nimport ReactExport from \"react-export-excel\";\n\nconst ExportExcel = ({ selectedItem }) => {\n  const [gongsaList, setGongsaList] = useState([]);\n  const ExcelFile = ReactExport.ExcelFile;\n  const ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\n  const ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\n\n  useEffect(() => {\n    console.log(\"dd\");\n    getGongsaList();\n  }, [selectedItem]);\n\n  const getGongsaList = async () => {\n    if (\n      selectedItem === \"100\" ||\n      selectedItem === \"200\" ||\n      selectedItem === \"300\" ||\n      selectedItem === \"400\"\n    ) {\n      const str = selectedItem.charAt(0);\n      const q = query(\n        collection(dbService, \"gongsa\"),\n        orderBy(\"regioncode\"),\n        orderBy(\"createdAt\", \"desc\"),\n        startAt(str),\n        endAt(str + \"\\uf8ff\")\n      );\n\n      const querySnapshot = await getDocs(q);\n      const querySnapshotArray = [];\n      querySnapshot.forEach((doc) => {\n        querySnapshotArray.push(doc.data());\n      });\n      setGongsaList(querySnapshotArray);\n    } else if (selectedItem === \"000\") {\n      const q = query(collection(dbService, \"gongsa\"));\n\n      const querySnapshot = await getDocs(q);\n      const querySnapshotArray = [];\n      querySnapshot.forEach((doc) => {\n        querySnapshotArray.push(doc.data());\n      });\n      setGongsaList(querySnapshotArray);\n    } else {\n      const q = query(\n        collection(dbService, \"gongsa\"),\n        where(\"regioncode\", \"==\", selectedItem)\n      );\n\n      const querySnapshot = await getDocs(q);\n      const querySnapshotArray = [];\n      querySnapshot.forEach((doc) => {\n        querySnapshotArray.push(doc.data());\n      });\n      setGongsaList(querySnapshotArray);\n    }\n  };\n  return (\n    <ExcelFile\n      element={\n        <button className=\"button is-success is-small is-rounded\">\n          <span className=\"icon is-small\">\n            <i className=\"fas fa-file-excel\"></i>\n          </span>\n          <span>엑셀</span>\n        </button>\n      }\n    >\n      {gongsaList.length !== 0 ? (\n        <ExcelSheet data={gongsaList} name=\"Data\">\n          <ExcelColumn label=\"신고자 번호\" value=\"phone\" />\n          <ExcelColumn label=\"주소\" value=\"addr\" />\n          <ExcelColumn label=\"시간\" value=\"createdAt\" />\n        </ExcelSheet>\n      ) : (\n        <></>\n      )}\n    </ExcelFile>\n  );\n};\n\nexport default ExportExcel;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  collection,\n  query,\n  where,\n  orderBy,\n  startAt,\n  endAt,\n} from \"firebase/firestore\";\nimport { dbService } from \"fbase\";\nimport GongsaList from \"./GongsaList\";\nimport { usePagination } from \"use-pagination-firestore\";\nimport ExportExcel from \"./ExportExcel\";\n\nconst ReadGongsa = ({ userObj, codeNum }) => {\n  const [selectedItem, setSelectedItem] = useState(\"000\");\n  const [isPc, setIsPC] = useState(false);\n  // const [firstVisible, setFirstVisible] = useState(null);\n  const [queryObject, setQueryObject] = useState(\n    query(collection(dbService, \"gongsa\"), orderBy(\"createdAt\", \"desc\"))\n  );\n\n  // usePagination 활용 페이지 구현 페이지당 5개씩\n  const { items, isLoading, isStart, isEnd, getPrev, getNext } = usePagination(\n    queryObject,\n    {\n      limit: 5,\n    }\n  );\n  //firestore data 호출\n  useEffect(() => {\n    getGongsaData();\n    let filter = \"win16|win32|win64|mac|macintel\";\n    if (0 > filter.indexOf(navigator.platform.toLocaleLowerCase())) {\n      setIsPC(false);\n    } else {\n      setIsPC(true);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (selectedItem === \"000\") getGongsaData();\n    else getGongsaDataByRegion();\n  }, [selectedItem]);\n\n  const getGongsaData = () => {\n    setQueryObject(\n      query(collection(dbService, \"gongsa\"), orderBy(\"createdAt\", \"desc\"))\n    );\n  };\n\n  const onChangeHandler = (e) => {\n    setSelectedItem(e.currentTarget.value);\n  };\n\n  const getGongsaDataByRegion = async () => {\n    if (\n      selectedItem === \"100\" ||\n      selectedItem === \"200\" ||\n      selectedItem === \"300\" ||\n      selectedItem === \"400\"\n    ) {\n      const str = selectedItem.charAt(0);\n      setQueryObject(\n        query(\n          collection(dbService, \"gongsa\"),\n          orderBy(\"regioncode\"),\n          orderBy(\"createdAt\", \"desc\"),\n          startAt(str),\n          endAt(str + \"\\uf8ff\")\n        )\n      );\n    } else {\n      setQueryObject(\n        query(\n          collection(dbService, \"gongsa\"),\n          orderBy(\"createdAt\", \"desc\"),\n          where(\"regioncode\", \"==\", selectedItem)\n        )\n      );\n    }\n  };\n\n  //firestore data 표시\n  return (\n    <div className=\"content\">\n      <div className=\"boxForm box\">\n        <div className=\"box-header\">\n          <span className=\"icon\">\n            <i className=\"fas fa-plus\"></i>\n          </span>\n          <p className=\"box-header-text\">공사신고 리스트</p>\n        </div>\n        <div className=\"select select-region\">\n          <>{isPc && <ExportExcel selectedItem={selectedItem} />}</>\n          <select value={selectedItem} onChange={(e) => onChangeHandler(e)}>\n            {codeNum.map((item, index) => (\n              <option key={item.code} value={item.code}>\n                {item.region}\n              </option>\n            ))}\n          </select>\n        </div>\n        <hr className=\"hr-main\" />\n        {items.map((gongsa) => (\n          <GongsaList\n            gongsaObj={gongsa}\n            key={gongsa.docKey}\n            userObj={userObj}\n            codeNum={codeNum}\n            isOwner={gongsa.createdId === userObj.uid}\n          />\n        ))}\n        <div className=\"field is-grouped is-grouped-centered\">\n          <p className=\"control\">\n            {\n              //show previous button only when we have items\n\n              <button\n                className=\"button is-small is-rounded is-link\"\n                onClick={() => getPrev()}\n                disabled={isStart}\n              >\n                이전\n              </button>\n            }\n          </p>\n          <p className=\"control\">\n            {\n              //show next button only when we have items\n              <button\n                className=\"button is-small is-rounded is-link\"\n                onClick={() => getNext()}\n                disabled={isEnd}\n              >\n                다음\n              </button>\n            }\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ReadGongsa;\n","import React, { useEffect, useState } from \"react\";\nimport { dbService } from \"fbase\";\nimport {\n  collection,\n  addDoc,\n  query,\n  onSnapshot,\n  orderBy,\n} from \"firebase/firestore\";\nimport Register from \"components/Register\";\nimport ReadGongsa from \"components/ReadGongsa\";\n\nconst Home = ({ userObj, codeNum }) => {\n  const [gongsa, setGongsa] = useState([]);\n\n  useEffect(() => {\n    const q = query(\n      collection(dbService, \"gongsa\"), //gongsa(collection name)\n      orderBy(\"createdAt\", \"desc\")\n    );\n    onSnapshot(q, (snapshot) => {\n      const gongsaArr = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setGongsa(gongsaArr);\n    });\n  }, []);\n\n  return (\n    <div>\n      <div className=\"container is-mobile\">\n        <section className=\"hero is-small is-link\">\n          <div className=\"hero-body\">\n            <p className=\"title\">사외공사 간편신고 웹</p>\n            <p className=\"subtitle\">\n              스마트폰 카메라 촬영으로 공사 간편신고가 가능한 Web입니다.\n            </p>\n          </div>\n        </section>\n        <Register userObj={userObj} codeNum={codeNum} />\n        <ReadGongsa userObj={userObj} codeNum={codeNum} />\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from \"react\";\nimport { authService, dbService } from \"fbase\";\nimport { collection, query, where, getDocs } from \"firebase/firestore\";\nimport { onLog } from \"@firebase/app\";\nimport GongsaList from \"components/GongsaList\";\n\nconst Profile = ({ userObj }) => {\n  console.log(userObj);\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const [myGongsa, setMyGongsa] = useState([]);\n\n  useEffect(() => {\n    async function querySnapShot() {\n      const q = query(\n        collection(dbService, \"gongsa\"),\n        where(\"createdId\", \"==\", userObj.uid)\n      );\n\n      const querySnapshot = await getDocs(q);\n      const gongsaArr = querySnapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setMyGongsa(gongsaArr);\n    }\n    querySnapShot();\n    setNewDisplayName(userObj.displayName.replace(\"+82\", \"0\"));\n  }, []);\n  const onLogOutClick = async () => await authService.signOut();\n\n  return (\n    <div className=\"container is-mobile\">\n      <button className=\"button is-ghost is-small\" onClick={onLogOutClick}>\n        로그아웃\n      </button>\n      <div className=\"content\">\n        <div className=\"boxForm box\">\n          <div className=\"box-header\">\n            <span className=\"icon\">\n              <i className=\"fas fa-lg fa-list-check\"></i>\n            </span>\n            <p className=\"box-header-text\">{newDisplayName}님의 공사리스트</p>\n          </div>\n          <hr className=\"hr-main\" />\n          {myGongsa.map((gongsa) => (\n            <GongsaList\n              gongsaObj={gongsa}\n              key={gongsa.docKey}\n              userObj={userObj}\n              isOwner={gongsa.createdId === userObj.uid}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { Outlet, Link } from \"react-router-dom\";\n\nconst Navigation = () => {\n  return (\n    <div>\n      {/* A \"layout route\" is a good place to put markup you want to\n            share across all the pages on your site, like navigation. */}\n      <nav>\n        <div className=\"nav-header\">\n          <div className=\"nav-content\">\n            <div className=\"nav-brand\"></div>\n            <div className=\"nav-ul\">\n              <ul\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"right\",\n                  paddingTop: 20,\n                  marginRight: 20,\n                }}\n              >\n                <li>\n                  <Link to=\"/\">\n                    <span className=\"icon-text is-large\">\n                      <span className=\"icon \">\n                        <i className=\"fas fa-lg fa-home\"></i>\n                      </span>\n                      <span>홈</span>\n                    </span>\n                  </Link>\n                </li>\n                <li>\n                  <Link\n                    to=\"/profile\"\n                    style={{\n                      display: \"flex\",\n                      flexDirection: \"column\",\n                      alignItems: \"center\",\n                    }}\n                  >\n                    <span className=\"icon-text is-large\">\n                      <span className=\"icon \">\n                        <i className=\"fas fa-lg fa-user\"></i>\n                      </span>\n                      <span>My</span>\n                    </span>\n                  </Link>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </nav>\n\n      {/* An <Outlet> renders whatever child route is currently active,\n            so you can think about this <Outlet> as a placeholder for\n            the child routes we defined above. */}\n      <Outlet />\n    </div>\n  );\n};\n\nexport default Navigation;\n","import React from \"react\";\nimport {\n  HashRouter as Router,\n  Routes,\n  Route,\n  Link,\n  Navigate,\n} from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Profile from \"routes/Profile\";\nimport Navigation from \"components/Navigation\";\n\nexport default function AppRouter({\n  isLoggedIn,\n  userObj,\n  refreshUser,\n  codeNum,\n}) {\n  return (\n    <div>\n      {/* Routes nest inside one another. Nested route paths build upon\n            parent route paths, and nested route elements render inside\n            parent route elements. See the note about <Outlet> below. */}\n      <Router>\n        <Routes>\n          {isLoggedIn ? (\n            <>\n              <Route path=\"/\" element={<Navigation />}>\n                <Route\n                  index\n                  element={<Home userObj={userObj} codeNum={codeNum} />}\n                />\n                <Route\n                  path=\"profile\"\n                  element={\n                    <Profile userObj={userObj} refreshUser={refreshUser} />\n                  }\n                />\n                {/* Using path=\"*\"\" means \"match anything\", so this route\n                acts like a catch-all for URLs that we don't have explicit\n                routes for. */}\n              </Route>\n              <Route path=\"*\" element={<Navigate replace to=\"/\" />} />\n            </>\n          ) : (\n            <>\n              <Route exact path=\"/\" element={<Auth />} />\n              <Route path=\"*\" element={<Navigate replace to=\"/\" />} />\n            </>\n          )}\n        </Routes>\n      </Router>\n    </div>\n  );\n}\n\nfunction About() {\n  return (\n    <div>\n      <h2>About</h2>\n    </div>\n  );\n}\n\nfunction NoMatch() {\n  return (\n    <div>\n      <h2>Nothing to see here!</h2>\n      <p>\n        <Link to=\"/\">Go to the home page</Link>\n      </p>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\nimport Lottie from \"react-lottie\";\nimport loadingAnimationData from \"lotties/loading-construction.json\";\n\nconst App = () => {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  //조직관할 코드 Array(서울 : 1 경기 : 2 인천 : 3 강원 : 4)\n  const codeNum = [\n    { code: \"000\", region: \"전체\" },\n    { code: \"100\", region: \"---서울---\" },\n    { code: \"101\", region: \"강남구\" },\n    { code: \"102\", region: \"강동구\" },\n    { code: \"103\", region: \"강서구\" },\n    { code: \"104\", region: \"관악구\" },\n    { code: \"105\", region: \"구로구\" },\n    { code: \"106\", region: \"금천구\" },\n    { code: \"107\", region: \"동작구\" },\n    { code: \"108\", region: \"서초구\" },\n    { code: \"109\", region: \"송파구\" },\n    { code: \"110\", region: \"양천구\" },\n    { code: \"111\", region: \"영등포구\" },\n    { code: \"200\", region: \"---경기---\" },\n    { code: \"201\", region: \"과천시\" },\n    { code: \"202\", region: \"광명시\" },\n    { code: \"203\", region: \"광주시\" },\n    { code: \"204\", region: \"군포시\" },\n    { code: \"205\", region: \"김포시\" },\n    { code: \"206\", region: \"부천시\" },\n    { code: \"207\", region: \"성남시\" },\n    { code: \"208\", region: \"수원시\" },\n    { code: \"209\", region: \"시흥시\" },\n    { code: \"210\", region: \"안산시\" },\n    { code: \"211\", region: \"안성시\" },\n    { code: \"212\", region: \"안양시\" },\n    { code: \"213\", region: \"여주시\" },\n    { code: \"215\", region: \"오산시\" },\n    { code: \"216\", region: \"용인시\" },\n    { code: \"217\", region: \"의왕시\" },\n    { code: \"218\", region: \"이천시\" },\n    { code: \"219\", region: \"평택시\" },\n    { code: \"220\", region: \"하남시\" },\n    { code: \"221\", region: \"화성시\" },\n    { code: \"300\", region: \"---인천---\" },\n    { code: \"301\", region: \"계양구\" },\n    { code: \"302\", region: \"남구\" },\n    { code: \"303\", region: \"남동구\" },\n    { code: \"304\", region: \"동구\" },\n    { code: \"305\", region: \"부평구\" },\n    { code: \"306\", region: \"연수구\" },\n    { code: \"307\", region: \"옹진군\" },\n    { code: \"308\", region: \"중구\" },\n    { code: \"400\", region: \"---강원---\" },\n    { code: \"401\", region: \"강릉시\" },\n    { code: \"999\", region: \"---기타---\" },\n  ];\n\n  const defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: loadingAnimationData,\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid slice\",\n    },\n  };\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      //유저상태변화 정보\n      if (user) {\n        setIsLoggedIn(true);\n        setUserObj({\n          displayName: user.phoneNumber, //로그인 시 폰 넘버\n          uid: user.uid, //파이어베이스 제공 식별자\n        });\n      } else {\n        setIsLoggedIn(false);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.phoneNumber,\n      uid: user.uid,\n    });\n  };\n\n  // RouteChangeTracker();\n\n  return (\n    <>\n      {init ? (\n        <>\n          <AppRouter\n            isLoggedIn={isLoggedIn}\n            refreshUser={refreshUser}\n            userObj={userObj} //관리\n            codeNum={codeNum}\n          />\n        </>\n      ) : (\n        <div className=\"auth-container\">\n          <Lottie options={defaultOptions} height={200} width={200} />\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"App\";\nimport Geocode from \"react-geocode\";\nimport firebase from \"firebase/compat/app\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"bulma/css/bulma.min.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"styles.scss\";\n\n//google analytics(~13)\nimport ReactGA from \"react-ga\";\n\nconst TRACKING_ID = process.env.REACT_APP_GOOGLE_ANALYTICS_TRACKING_ID;\n\nReactGA.initialize(TRACKING_ID);\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}