[{"/Users/ming/Desktop/workspace/gongsa/src/components/Router.js":"1","/Users/ming/Desktop/workspace/gongsa/src/components/Navigation.js":"2","/Users/ming/Desktop/workspace/gongsa/src/routes/Auth.js":"3","/Users/ming/Desktop/workspace/gongsa/src/routes/Profile.js":"4","/Users/ming/Desktop/workspace/gongsa/src/components/Register.js":"5","/Users/ming/Desktop/workspace/gongsa/src/index.js":"6","/Users/ming/Desktop/workspace/gongsa/src/App.js":"7","/Users/ming/Desktop/workspace/gongsa/src/fbase.js":"8","/Users/ming/Desktop/workspace/gongsa/src/routes/Home.js":"9","/Users/ming/Desktop/workspace/gongsa/src/components/ReadGongsa.js":"10"},{"size":1816,"mtime":1652864118406,"results":"11","hashOfConfig":"12"},{"size":731,"mtime":1651467724256,"results":"13","hashOfConfig":"12"},{"size":3192,"mtime":1652863629493,"results":"14","hashOfConfig":"12"},{"size":468,"mtime":1652863632945,"results":"15","hashOfConfig":"12"},{"size":9082,"mtime":1652864120840,"results":"16","hashOfConfig":"12"},{"size":524,"mtime":1652071871542,"results":"17","hashOfConfig":"12"},{"size":1110,"mtime":1652864065135,"results":"18","hashOfConfig":"12"},{"size":695,"mtime":1651214086403,"results":"19","hashOfConfig":"12"},{"size":810,"mtime":1652864049747,"results":"20","hashOfConfig":"12"},{"size":158,"mtime":1651465781753,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"26"},"16npvjw",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"26"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"26"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/ming/Desktop/workspace/gongsa/src/components/Router.js",["59","60","61"],[],"import React from \"react\";\nimport {\n  HashRouter as Router,\n  Routes,\n  Route,\n  Outlet,\n  Link,\n  Navigate,\n} from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Profile from \"routes/Profile\";\nimport Navigation from \"components/Navigation\";\n\nexport default function AppRouter({ isLoggedIn, userObj, refreshUser }) {\n  return (\n    <div>\n      <h1>사외공사장 테스트</h1>\n      {/* Routes nest inside one another. Nested route paths build upon\n            parent route paths, and nested route elements render inside\n            parent route elements. See the note about <Outlet> below. */}\n      <Router>\n        <Routes>\n          {isLoggedIn ? (\n            <>\n              <Route path=\"/\" element={<Navigation />}>\n                <Route index element={<Home userObj={userObj} />} />\n                <Route\n                  path=\"profile\"\n                  element={\n                    <Profile userObj={userObj} refreshUser={refreshUser} />\n                  }\n                />\n                {/* Using path=\"*\"\" means \"match anything\", so this route\n                acts like a catch-all for URLs that we don't have explicit\n                routes for. */}\n              </Route>\n              <Route path=\"*\" element={<Navigate replace to=\"/\" />} />\n            </>\n          ) : (\n            <>\n              <Route exact path=\"/\" element={<Auth />} />\n              <Route path=\"*\" element={<Navigate replace to=\"/\" />} />\n            </>\n          )}\n        </Routes>\n      </Router>\n    </div>\n  );\n}\n\nfunction About() {\n  return (\n    <div>\n      <h2>About</h2>\n    </div>\n  );\n}\n\nfunction NoMatch() {\n  return (\n    <div>\n      <h2>Nothing to see here!</h2>\n      <p>\n        <Link to=\"/\">Go to the home page</Link>\n      </p>\n    </div>\n  );\n}\n",[],"/Users/ming/Desktop/workspace/gongsa/src/components/Navigation.js",[],[],"/Users/ming/Desktop/workspace/gongsa/src/routes/Auth.js",["62","63","64"],[],"import React, { useEffect, useState } from \"react\";\nimport { authService } from \"fbase\";\nimport { RecaptchaVerifier, signInWithPhoneNumber } from \"firebase/auth\";\n\nconst Auth = () => {\n  const [phoneNumber, setPhonenumber] = useState(\"\");\n  const [codeNumber, setCodeNumber] = useState(\"\");\n  const [isSendSMS, setIsSendSms] = useState(\"\");\n  const appVerifier = window.recaptchaVerifier;\n  const phoneNumberTest = \"+16505551234\";\n  const testVerificationCode = \"123456\";\n  const onChanged = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"phone\") {\n      setPhonenumber(value);\n    } else if (name === \"code\") {\n      setCodeNumber(value);\n    }\n  };\n  useEffect(() => {\n    window.recaptchaVerifier = new RecaptchaVerifier(\n      \"recaptcha-container\",\n      {\n        size: \"invisible\",\n        callback: (response) => {\n          // reCAPTCHA solved, allow signInWithPhoneNumber.\n        },\n      },\n      authService\n    );\n  }, []);\n  const onSubmit = (event) => {\n    event.preventDefault();\n    authService.languageCode = \"ko\";\n    // window.recaptchaVerifier = new RecaptchaVerifier(\n    //   \"recaptcha-container\",\n    //   {},\n    //   authService\n    // );\n    signInWithPhoneNumber(authService, \"+82\" + phoneNumber, appVerifier)\n      .then((confirmationResult) => {\n        setIsSendSms(true);\n        // SMS sent. Prompt user to type the code from the message, then sign the\n        // user in with confirmationResult.confirm(code).\n        window.confirmationResult = confirmationResult;\n        // ...\n      })\n      .catch((error) => {\n        console.log(error);\n        // Error; SMS not sent\n        // ...\n      });\n    // signInWithPhoneNumber(authService, phoneNumberTest, appVerifier)\n    //   .then(function (confirmationResult) {\n    //     // confirmationResult can resolve with the fictional testVerificationCode above.\n    //     return confirmationResult.confirm(testVerificationCode);\n    //   })\n    //   .catch(function (error) {\n    //     // Error; SMS not sent\n    //     // ...\n    //   });\n  };\n\n  const onCodeConfirmClick = (event) => {\n    window.confirmationResult\n      .confirm(codeNumber)\n      .then((result) => {\n        // User signed in successfully.\n        const user = result.user;\n        //console.log(user);\n        // ...\n      })\n      .catch((error) => {\n        //console.log(error);\n        // User couldn't sign in (bad verification code?)\n        // ...\n      });\n  };\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <input\n          name=\"phone\"\n          type=\"phone\"\n          placeholder=\"'-' 없이 입력\"\n          required\n          value={phoneNumber}\n          onChange={onChanged}\n        />\n        <input type=\"submit\" value=\"Log In\" />\n      </form>\n      {isSendSMS && (\n        <>\n          <input\n            name=\"code\"\n            type=\"text\"\n            placeholder=\"인증번호\"\n            required\n            value={codeNumber}\n            onChange={onChanged}\n          />\n          <button onClick={onCodeConfirmClick} value=\"인증번호확인\" />\n        </>\n      )}\n      <div id=\"recaptcha-container\"></div>\n    </>\n  );\n};\n\nexport default Auth;\n","/Users/ming/Desktop/workspace/gongsa/src/routes/Profile.js",["65"],[],"/Users/ming/Desktop/workspace/gongsa/src/components/Register.js",["66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81"],[],"import React, { useEffect, useRef, useState } from \"react\";\nimport { dbService, storageService } from \"../fbase\";\nimport {\n  collection,\n  query,\n  where,\n  onSnapshot,\n  getDocs,\n  setDoc,\n  doc,\n  arrayRemove,\n} from \"firebase/firestore\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport EXIF from \"exif-js\";\nimport { async } from \"@firebase/util\";\nimport { ref, uploadString, getDownloadURL } from \"firebase/storage\";\nimport Geocode from \"react-geocode\";\n\nGeocode.setApiKey(\"AIzaSyBIWmLYzIJmYLxLoRsHchr0OAErLWpKcyI\");\nGeocode.setLanguage(\"ko\");\nGeocode.setRegion(\"kr\");\nGeocode.enableDebug();\n\nconst Register = ({ userObj }) => {\n  const [gongsa, setGongsa] = useState(\"\");\n  const [gongsas, setGongsas] = useState([]);\n  const [attachment, setAttachment] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  const [GPSla, setGPSLa] = useState([]); //위도\n  const [GPSlong, setGPSLong] = useState([]); //경도\n  const [address, setAddress] = useState(\"\"); //주소변환\n  const [arr, setArr] = useState([]); //주소변환\n  const meta = useRef(null);\n\n  //조직관할 코드 Array(서울 : 1 경기 : 2 인천 : 3)\n  const CodeNum = [\n    { code: \"000\", region: undefined },\n    { code: \"101\", region: \"강남구\" },\n    { code: \"102\", region: \"강동구\" },\n    { code: \"103\", region: \"강서구\" },\n    { code: \"104\", region: \"관악구\" },\n    { code: \"105\", region: \"구로구\" },\n    { code: \"106\", region: \"금천구\" },\n    { code: \"107\", region: \"동작구\" },\n    { code: \"108\", region: \"서초구\" },\n    { code: \"109\", region: \"송파구\" },\n    { code: \"110\", region: \"양천구\" },\n    { code: \"201\", region: \"과천시\" },\n    { code: \"202\", region: \"광명시\" },\n    { code: \"203\", region: \"광주시\" },\n    { code: \"204\", region: \"군포시\" },\n    { code: \"205\", region: \"김포시\" },\n    { code: \"206\", region: \"부천시\" },\n    { code: \"207\", region: \"성남시\" },\n    { code: \"208\", region: \"수원시\" },\n    { code: \"209\", region: \"시흥시\" },\n    { code: \"210\", region: \"안산시\" },\n    { code: \"211\", region: \"안성시\" },\n    { code: \"212\", region: \"안양시\" },\n    { code: \"213\", region: \"여주시\" },\n    { code: \"215\", region: \"오산시\" },\n    { code: \"216\", region: \"용인시\" },\n    { code: \"217\", region: \"의왕시\" },\n    { code: \"218\", region: \"이천시\" },\n    { code: \"219\", region: \"평택시\" },\n    { code: \"220\", region: \"하남시\" },\n    { code: \"221\", region: \"화성시\" },\n    { code: \"111\", region: \"영등포구\" },\n    { code: \"301\", region: \"계양구\" },\n    { code: \"302\", region: \"남구\" },\n    { code: \"303\", region: \"남동구\" },\n    { code: \"304\", region: \"동구\" },\n    { code: \"305\", region: \"부평구\" },\n    { code: \"306\", region: \"연수구\" },\n    { code: \"307\", region: \"옹진군\" },\n    { code: \"308\", region: \"중구\" },\n  ];\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    let attachmentUrl = \"\";\n\n    if (attachment !== \"\") {\n      const attachmentRef = ref(storageService, `${userObj.uid}/${uuidv4()}`);\n      const response = await uploadString(\n        attachmentRef,\n        attachment,\n        \"data_url\"\n      );\n      attachmentUrl = await getDownloadURL(response.ref);\n    }\n    //attachment 유효성검사\n    if (attachmentUrl == \"\") {\n      alert(\"이미지 파일은 필수입니다.\");\n      window.location.reload();\n    }\n\n    if (test == undefined) {\n      alert(\"관할 외 지역으로 등록이 불가합니다.\");\n      window.location.reload();\n    }\n\n    //게시글 삭제,수정을 위한 고유키 값 부여\n    const key = uuidv4();\n\n    const gongsaObj = {\n      text: gongsa,\n      createdAt: date,\n      GPSLatitude: GPSla,\n      GPSLongitude: GPSlong,\n      addr: address,\n      docKey: key,\n      phone: userObj.displayName,\n      createdId: userObj.uid,\n      attachmentUrl,\n      code: test.code,\n\n      // 필드 태그 수정 필요\n    };\n\n    //key값 부여를 위한 addDoc에서 setDoc으로 함수 변경\n    await setDoc(doc(dbService, \"gongsa\", key), gongsaObj);\n    setGongsa(\"\");\n    setAttachment(\"\");\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setGongsa(value);\n  };\n\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n    meta.current = theFile;\n\n    if (theFile && theFile.name) {\n      EXIF.getData(theFile, function () {\n        let exifData = EXIF.pretty(this);\n        let gpsLa = EXIF.getTag(this, \"GPSLatitude\");\n        let gpsLaRef = EXIF.getTag(this, \"GPSLatitudeRef\");\n        let gpsLong = EXIF.getTag(this, \"GPSLongitude\");\n        let gpsLongRef = EXIF.getTag(this, \"GPSLongitudeRef\");\n\n        let la = [];\n        let long = [];\n\n        //위경도 api 연동 변수\n        let a = \"\";\n        let b = \"\";\n\n        if (gpsLa) {\n          //exifdata 존재 시 gps 계산 수행\n          console.log(exifData);\n          console.log(gpsLa);\n          console.log(gpsLong);\n          for (let i = 0; i < gpsLa.length; i++) {\n            la[i] = gpsLa[i].numerator / gpsLa[i].denominator;\n          }\n          for (let i = 0; i < gpsLong.length; i++) {\n            long[i] = gpsLong[i].numerator / gpsLong[i].denominator;\n          }\n\n          //값 확인 콘솔\n          console.log(la, long, gpsLaRef, gpsLongRef);\n\n          //사진 시각 정보 설정\n          setDate(EXIF.getTag(this, \"DateTime\"));\n\n          //ref 조건 별 위경도 계산\n          if (gpsLaRef == \"N\") {\n            a =\n              parseInt(la[0]) +\n              (60 * parseInt(la[1]) + parseFloat(la[2])) / 3600;\n          } else {\n            a =\n              -1 * parseInt(la[0]) +\n              (-60 * parseInt(la[1]) + -1 * parseFloat(la[2])) / 3600;\n          }\n          setGPSLa(a);\n\n          if (gpsLongRef == \"E\") {\n            b =\n              parseInt(long[0]) +\n              (60 * parseInt(long[1]) + parseFloat(long[2])) / 3600;\n          } else {\n            b =\n              -1 * parseInt(long[0]) +\n              (-60 * parseInt(long[1]) + -1 * parseFloat(long[2])) / 3600;\n          }\n          setGPSLong(b);\n        } else {\n          alert(\n            \"[오류] 사진의 위치정보가 존재하지 않습니다.\\n\\n ㅇ 위치기반 재촬영 방법 \\n Android : 설정>위치>사용 활성화 \\n iOS : 설정>카메라>포맷>높은 호환성>재촬영 후 사진 보관함에서 사진 선택\"\n          );\n          window.location.reload();\n        }\n        //주소변환 실행\n        setFileData(a, b);\n      });\n    }\n  };\n\n  //주소변환함수\n  const setFileData = (a, b) => {\n    console.log(GPSla, GPSlong);\n    Geocode.fromLatLng(String(a), String(b)).then(\n      (response) => {\n        setAddress(response.results[0].formatted_address);\n        let city, state, country;\n        for (const element of response.results[0].address_components) {\n          for (let j = 0; j < element.types.length; j++) {\n            switch (element.types[j]) {\n              case \"locality\":\n                city = element.long_name;\n                break;\n              case \"administrative_area_level_1\":\n                state = element.long_name;\n                break;\n              case \"country\":\n                country = element.long_name;\n                break;\n            }\n          }\n        }\n\n        //배열에 공백 단위로 주소 나눠넣기 -> 이슈) 바로 실행 안되고 다음 단계에 실행됨\n        setArr(response.results[0].formatted_address.split(\" \"));\n        console.log(city, state, country);\n      },\n      (error) => {\n        console.error(error);\n      }\n    );\n  };\n\n  const onClearAttachment = () => {\n    setAttachment(null);\n    setGongsa(null);\n    fileInput.current.value = null;\n  };\n\n  const fileInput = useRef();\n\n  //code 찾기 (이슈 : 매칭 안되는 지역은 submit이 안됨)\n  const test = CodeNum.find((CodeNum) => {\n    return CodeNum.region === arr[2];\n  });\n  console.log(test);\n\n  return (\n    <div>\n      <h2>민정씨 Component</h2>\n      <form onSubmit={onSubmit}>\n        <textarea\n          value={gongsa}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"공사 제목\"\n        />\n        <input\n          type=\"file\"\n          accept=\"image/*\"\n          onChange={onFileChange}\n          ref={fileInput}\n        />\n        <hr />\n        <input type=\"submit\" value=\"submit\" />\n        {attachment && (\n          <div>\n            <img src={attachment} width=\"50px\" height=\"50px\" />\n            <button onClick={onClearAttachment}>Clear</button>\n          </div>\n        )}\n        {console.log(meta)}\n        <hr />\n        Time : {date}\n        <hr />\n        GPSLatitude : {GPSla}\n        <hr />\n        GPSLongitude : {GPSlong}\n        <hr />\n        Addr : {address}\n      </form>\n    </div>\n  );\n};\n\nexport default Register;\n","/Users/ming/Desktop/workspace/gongsa/src/index.js",["82","83"],[],"import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"App\";\nimport Geocode from \"react-geocode\";\nimport firebase from \"firebase/compat/app\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","/Users/ming/Desktop/workspace/gongsa/src/App.js",[],[],"/Users/ming/Desktop/workspace/gongsa/src/fbase.js",["84"],[],"import { initializeApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { getStorage } from \"firebase/storage\";\n\n\n// push testing\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDFJzAEwTuo4my8nQ4fsIS_ktyXv2YhN4g\",\n  authDomain: \"gongsa-d233a.firebaseapp.com\",\n  projectId: \"gongsa-d233a\",\n  storageBucket: \"gongsa-d233a.appspot.com\",\n  messagingSenderId: \"772155270923\",\n  appId: \"1:772155270923:web:d64c6b9118ca3cfee8640e\",\n  measurementId: \"G-7F6MDW2NBE\"\n};\n\nconst app = initializeApp(firebaseConfig);\n\nexport const authService = getAuth();\nexport const dbService = getFirestore();\nexport const storageService = getStorage();\n","/Users/ming/Desktop/workspace/gongsa/src/routes/Home.js",["85","86"],[],"import React, { useEffect, useState } from \"react\";\nimport { dbService } from \"fbase\";\nimport {\n  collection,\n  addDoc,\n  query,\n  onSnapshot,\n  orderBy,\n} from \"firebase/firestore\";\nimport Register from \"components/Register\";\nimport ReadGongsa from \"components/ReadGongsa\";\n\nconst Home = ({ userObj }) => {\n  const [gongsa, setGongsa] = useState([]);\n\n  useEffect(() => {\n    const q = query(\n      collection(dbService, \"gongsa\"), //gongsa(collection name)\n      orderBy(\"createdAt\", \"desc\")\n    );\n    onSnapshot(q, (snapshot) => {\n      const gongsaArr = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setGongsa(gongsaArr);\n    });\n  }, []);\n\n  return (\n    <div>\n      <Register userObj={userObj} />\n      <ReadGongsa />\n    </div>\n  );\n};\n\nexport default Home;\n","/Users/ming/Desktop/workspace/gongsa/src/components/ReadGongsa.js",[],[],{"ruleId":"87","severity":1,"message":"88","line":6,"column":3,"nodeType":"89","messageId":"90","endLine":6,"endColumn":9},{"ruleId":"87","severity":1,"message":"91","line":52,"column":10,"nodeType":"89","messageId":"90","endLine":52,"endColumn":15},{"ruleId":"87","severity":1,"message":"92","line":60,"column":10,"nodeType":"89","messageId":"90","endLine":60,"endColumn":17},{"ruleId":"87","severity":1,"message":"93","line":10,"column":9,"nodeType":"89","messageId":"90","endLine":10,"endColumn":24},{"ruleId":"87","severity":1,"message":"94","line":11,"column":9,"nodeType":"89","messageId":"90","endLine":11,"endColumn":29},{"ruleId":"87","severity":1,"message":"95","line":71,"column":15,"nodeType":"89","messageId":"90","endLine":71,"endColumn":19},{"ruleId":"87","severity":1,"message":"96","line":6,"column":26,"nodeType":"89","messageId":"90","endLine":6,"endColumn":43},{"ruleId":"87","severity":1,"message":"97","line":1,"column":17,"nodeType":"89","messageId":"90","endLine":1,"endColumn":26},{"ruleId":"87","severity":1,"message":"98","line":4,"column":3,"nodeType":"89","messageId":"90","endLine":4,"endColumn":13},{"ruleId":"87","severity":1,"message":"99","line":5,"column":3,"nodeType":"89","messageId":"90","endLine":5,"endColumn":8},{"ruleId":"87","severity":1,"message":"100","line":6,"column":3,"nodeType":"89","messageId":"90","endLine":6,"endColumn":8},{"ruleId":"87","severity":1,"message":"101","line":7,"column":3,"nodeType":"89","messageId":"90","endLine":7,"endColumn":13},{"ruleId":"87","severity":1,"message":"102","line":8,"column":3,"nodeType":"89","messageId":"90","endLine":8,"endColumn":10},{"ruleId":"87","severity":1,"message":"103","line":11,"column":3,"nodeType":"89","messageId":"90","endLine":11,"endColumn":14},{"ruleId":"87","severity":1,"message":"104","line":15,"column":10,"nodeType":"89","messageId":"90","endLine":15,"endColumn":15},{"ruleId":"87","severity":1,"message":"105","line":26,"column":10,"nodeType":"89","messageId":"90","endLine":26,"endColumn":17},{"ruleId":"87","severity":1,"message":"106","line":26,"column":19,"nodeType":"89","messageId":"90","endLine":26,"endColumn":29},{"ruleId":"107","severity":1,"message":"108","line":93,"column":23,"nodeType":"109","messageId":"110","endLine":93,"endColumn":25},{"ruleId":"107","severity":1,"message":"108","line":98,"column":14,"nodeType":"109","messageId":"110","endLine":98,"endColumn":16},{"ruleId":"107","severity":1,"message":"108","line":183,"column":24,"nodeType":"109","messageId":"110","endLine":183,"endColumn":26},{"ruleId":"107","severity":1,"message":"108","line":194,"column":26,"nodeType":"109","messageId":"110","endLine":194,"endColumn":28},{"ruleId":"111","severity":1,"message":"112","line":225,"column":13,"nodeType":"113","messageId":"114","endLine":235,"endColumn":14},{"ruleId":"115","severity":1,"message":"116","line":283,"column":13,"nodeType":"117","endLine":283,"endColumn":64},{"ruleId":"87","severity":1,"message":"118","line":4,"column":8,"nodeType":"89","messageId":"90","endLine":4,"endColumn":15},{"ruleId":"87","severity":1,"message":"119","line":5,"column":8,"nodeType":"89","messageId":"90","endLine":5,"endColumn":16},{"ruleId":"87","severity":1,"message":"120","line":18,"column":7,"nodeType":"89","messageId":"90","endLine":18,"endColumn":10},{"ruleId":"87","severity":1,"message":"121","line":5,"column":3,"nodeType":"89","messageId":"90","endLine":5,"endColumn":9},{"ruleId":"87","severity":1,"message":"122","line":14,"column":10,"nodeType":"89","messageId":"90","endLine":14,"endColumn":16},"no-unused-vars","'Outlet' is defined but never used.","Identifier","unusedVar","'About' is defined but never used.","'NoMatch' is defined but never used.","'phoneNumberTest' is assigned a value but never used.","'testVerificationCode' is assigned a value but never used.","'user' is assigned a value but never used.","'setNewDisplayName' is assigned a value but never used.","'useEffect' is defined but never used.","'collection' is defined but never used.","'query' is defined but never used.","'where' is defined but never used.","'onSnapshot' is defined but never used.","'getDocs' is defined but never used.","'arrayRemove' is defined but never used.","'async' is defined but never used.","'gongsas' is assigned a value but never used.","'setGongsas' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Geocode' is defined but never used.","'firebase' is defined but never used.","'app' is assigned a value but never used.","'addDoc' is defined but never used.","'gongsa' is assigned a value but never used."]