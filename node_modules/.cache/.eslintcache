[{"/Users/ming/Desktop/workspace/gongsa/src/components/Router.js":"1","/Users/ming/Desktop/workspace/gongsa/src/components/Navigation.js":"2","/Users/ming/Desktop/workspace/gongsa/src/routes/Auth.js":"3","/Users/ming/Desktop/workspace/gongsa/src/routes/Profile.js":"4","/Users/ming/Desktop/workspace/gongsa/src/components/Register.js":"5","/Users/ming/Desktop/workspace/gongsa/src/index.js":"6","/Users/ming/Desktop/workspace/gongsa/src/App.js":"7","/Users/ming/Desktop/workspace/gongsa/src/fbase.js":"8","/Users/ming/Desktop/workspace/gongsa/src/routes/Home.js":"9","/Users/ming/Desktop/workspace/gongsa/src/components/ReadGongsa.js":"10"},{"size":1816,"mtime":1651562181396,"results":"11","hashOfConfig":"12"},{"size":731,"mtime":1651467724256,"results":"13","hashOfConfig":"12"},{"size":3192,"mtime":1651562184546,"results":"14","hashOfConfig":"12"},{"size":468,"mtime":1651546283817,"results":"15","hashOfConfig":"12"},{"size":2951,"mtime":1651562190173,"results":"16","hashOfConfig":"12"},{"size":487,"mtime":1651465584614,"results":"17","hashOfConfig":"12"},{"size":1133,"mtime":1651546280223,"results":"18","hashOfConfig":"12"},{"size":695,"mtime":1651214086403,"results":"19","hashOfConfig":"12"},{"size":810,"mtime":1651562177613,"results":"20","hashOfConfig":"12"},{"size":158,"mtime":1651465781753,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"26"},"16npvjw",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"26"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"26"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/ming/Desktop/workspace/gongsa/src/components/Router.js",["60","61","62"],[],"import React from \"react\";\nimport {\n  HashRouter as Router,\n  Routes,\n  Route,\n  Outlet,\n  Link,\n  Navigate,\n} from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Profile from \"routes/Profile\";\nimport Navigation from \"components/Navigation\";\n\nexport default function AppRouter({ isLoggedIn, userObj, refreshUser }) {\n  return (\n    <div>\n      <h1>사외공사장 테스트</h1>\n      {/* Routes nest inside one another. Nested route paths build upon\n            parent route paths, and nested route elements render inside\n            parent route elements. See the note about <Outlet> below. */}\n      <Router>\n        <Routes>\n          {isLoggedIn ? (\n            <>\n              <Route path=\"/\" element={<Navigation />}>\n                <Route index element={<Home userObj={userObj} />} />\n                <Route\n                  path=\"profile\"\n                  element={\n                    <Profile userObj={userObj} refreshUser={refreshUser} />\n                  }\n                />\n                {/* Using path=\"*\"\" means \"match anything\", so this route\n                acts like a catch-all for URLs that we don't have explicit\n                routes for. */}\n              </Route>\n              <Route path=\"*\" element={<Navigate replace to=\"/\" />} />\n            </>\n          ) : (\n            <>\n              <Route exact path=\"/\" element={<Auth />} />\n              <Route path=\"*\" element={<Navigate replace to=\"/\" />} />\n            </>\n          )}\n        </Routes>\n      </Router>\n    </div>\n  );\n}\n\nfunction About() {\n  return (\n    <div>\n      <h2>About</h2>\n    </div>\n  );\n}\n\nfunction NoMatch() {\n  return (\n    <div>\n      <h2>Nothing to see here!</h2>\n      <p>\n        <Link to=\"/\">Go to the home page</Link>\n      </p>\n    </div>\n  );\n}\n",[],"/Users/ming/Desktop/workspace/gongsa/src/components/Navigation.js",[],[],"/Users/ming/Desktop/workspace/gongsa/src/routes/Auth.js",["63","64","65"],[],"import React, { useEffect, useState } from \"react\";\nimport { authService } from \"fbase\";\nimport { RecaptchaVerifier, signInWithPhoneNumber } from \"firebase/auth\";\n\nconst Auth = () => {\n  const [phoneNumber, setPhonenumber] = useState(\"\");\n  const [codeNumber, setCodeNumber] = useState(\"\");\n  const [isSendSMS, setIsSendSms] = useState(\"\");\n  const appVerifier = window.recaptchaVerifier;\n  const phoneNumberTest = \"+16505551234\";\n  const testVerificationCode = \"123456\";\n  const onChanged = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"phone\") {\n      setPhonenumber(value);\n    } else if (name === \"code\") {\n      setCodeNumber(value);\n    }\n  };\n  useEffect(() => {\n    window.recaptchaVerifier = new RecaptchaVerifier(\n      \"recaptcha-container\",\n      {\n        size: \"invisible\",\n        callback: (response) => {\n          // reCAPTCHA solved, allow signInWithPhoneNumber.\n        },\n      },\n      authService\n    );\n  }, []);\n  const onSubmit = (event) => {\n    event.preventDefault();\n    authService.languageCode = \"ko\";\n    // window.recaptchaVerifier = new RecaptchaVerifier(\n    //   \"recaptcha-container\",\n    //   {},\n    //   authService\n    // );\n    signInWithPhoneNumber(authService, \"+82\" + phoneNumber, appVerifier)\n      .then((confirmationResult) => {\n        setIsSendSms(true);\n        // SMS sent. Prompt user to type the code from the message, then sign the\n        // user in with confirmationResult.confirm(code).\n        window.confirmationResult = confirmationResult;\n        // ...\n      })\n      .catch((error) => {\n        console.log(error);\n        // Error; SMS not sent\n        // ...\n      });\n    // signInWithPhoneNumber(authService, phoneNumberTest, appVerifier)\n    //   .then(function (confirmationResult) {\n    //     // confirmationResult can resolve with the fictional testVerificationCode above.\n    //     return confirmationResult.confirm(testVerificationCode);\n    //   })\n    //   .catch(function (error) {\n    //     // Error; SMS not sent\n    //     // ...\n    //   });\n  };\n\n  const onCodeConfirmClick = (event) => {\n    window.confirmationResult\n      .confirm(codeNumber)\n      .then((result) => {\n        // User signed in successfully.\n        const user = result.user;\n        //console.log(user);\n        // ...\n      })\n      .catch((error) => {\n        //console.log(error);\n        // User couldn't sign in (bad verification code?)\n        // ...\n      });\n  };\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <input\n          name=\"phone\"\n          type=\"phone\"\n          placeholder=\"'-' 없이 입력\"\n          required\n          value={phoneNumber}\n          onChange={onChanged}\n        />\n        <input type=\"submit\" value=\"Log In\" />\n      </form>\n      {isSendSMS && (\n        <>\n          <input\n            name=\"code\"\n            type=\"text\"\n            placeholder=\"인증번호\"\n            required\n            value={codeNumber}\n            onChange={onChanged}\n          />\n          <button onClick={onCodeConfirmClick} value=\"인증번호확인\" />\n        </>\n      )}\n      <div id=\"recaptcha-container\"></div>\n    </>\n  );\n};\n\nexport default Auth;\n","/Users/ming/Desktop/workspace/gongsa/src/routes/Profile.js",["66"],[],"import React, { useState } from \"react\";\nimport { authService } from \"fbase\";\n\nconst Profile = ({ userObj }) => {\n  console.log(userObj);\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n\n  const onLogOutClick = async () => await authService.signOut();\n\n  return (\n    <div>\n      <div>\n        <label>{newDisplayName}</label>\n      </div>\n\n      <button onClick={onLogOutClick}>Log Out</button>\n    </div>\n  );\n};\n\nexport default Profile;\n","/Users/ming/Desktop/workspace/gongsa/src/components/Register.js",["67","68","69","70"],[],"import React, { useEffect, useRef, useState } from \"react\";\nimport { dbService, storageService } from \"../fbase\";\nimport { collection, addDoc } from \"firebase/firestore\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport EXIF from \"exif-js\";\nimport { ref, uploadString, getDownloadURL } from \"firebase/storage\";\n\nconst Register = ({ userObj }) => {\n  const [gongsa, setGongsa] = useState(\"\");\n  const [gongsas, setGongsas] = useState([]);\n  const [attachment, setAttachment] = useState(\"\");\n  const [meta, setMeta] = useState(\"\"); //metadata\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    let attachmentUrl = \"\";\n\n    if (attachment !== \"\") {\n      const attachmentRef = ref(storageService, `${userObj.uid}/${uuidv4()}`);\n      const response = await uploadString(\n        attachmentRef,\n        attachment,\n        \"data_url\"\n      );\n      attachmentUrl = await getDownloadURL(response.ref);\n    }\n\n    const gongsaObj = {\n      text: gongsa,\n      createdAt: Date.now(),\n      createdId: userObj.uid,\n      attachmentUrl,\n      // phoneNumber,\n    };\n    await addDoc(collection(dbService, \"gongsa\"), gongsaObj);\n    setGongsa(\"\");\n    setAttachment(\"\");\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setGongsa(value);\n  };\n  const onFileChange = async (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n    //메타데이터 console\n    if (theFile && theFile.name) {\n      EXIF.getData(theFile, function () {\n        var exifData = EXIF.pretty(this);\n        if (exifData) {\n          console.log(exifData);\n          console.log(EXIF.getTag(this, \"Orientation\"));\n          setMeta(theFile); //file metadata\n        } else {\n          console.log(\"No EXIF data found in image '\" + theFile.name + \"'.\");\n        }\n      });\n    }\n  };\n\n  const onClearAttachment = () => {\n    setAttachment(null);\n    fileInput.current.value = null;\n  };\n\n  const fileInput = useRef();\n\n  return (\n    <div>\n      <h2>민정씨 Component</h2>\n      <form onSubmit={onSubmit}>\n        <input\n          value={gongsa}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"공사 정보 입력\"\n        />\n        <input\n          type=\"file\"\n          accept=\"image/*\"\n          onChange={onFileChange}\n          ref={fileInput}\n        />\n        <input type=\"submit\" value=\"submit\" />\n\n        {attachment && (\n          <div>\n            <img src={attachment} width=\"50px\" height=\"50px\" />\n            {meta.exifdata.DateTime}\n            <button onClick={onClearAttachment}>Clear</button>\n          </div>\n        )}\n        {console.log(meta)}\n      </form>\n    </div>\n  );\n};\n\nexport default Register;\n","/Users/ming/Desktop/workspace/gongsa/src/index.js",["71"],[],"import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"App\";\nimport firebase from \"firebase/compat/app\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","/Users/ming/Desktop/workspace/gongsa/src/App.js",[],[],"/Users/ming/Desktop/workspace/gongsa/src/fbase.js",["72"],[],"import { initializeApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { getStorage } from \"firebase/storage\";\n\n\n// push testing\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDFJzAEwTuo4my8nQ4fsIS_ktyXv2YhN4g\",\n  authDomain: \"gongsa-d233a.firebaseapp.com\",\n  projectId: \"gongsa-d233a\",\n  storageBucket: \"gongsa-d233a.appspot.com\",\n  messagingSenderId: \"772155270923\",\n  appId: \"1:772155270923:web:d64c6b9118ca3cfee8640e\",\n  measurementId: \"G-7F6MDW2NBE\"\n};\n\nconst app = initializeApp(firebaseConfig);\n\nexport const authService = getAuth();\nexport const dbService = getFirestore();\nexport const storageService = getStorage();\n","/Users/ming/Desktop/workspace/gongsa/src/routes/Home.js",["73","74"],[],"import React, { useEffect, useState } from \"react\";\nimport { dbService } from \"fbase\";\nimport {\n  collection,\n  addDoc,\n  query,\n  onSnapshot,\n  orderBy,\n} from \"firebase/firestore\";\nimport Register from \"components/Register\";\nimport ReadGongsa from \"components/ReadGongsa\";\n\nconst Home = ({ userObj }) => {\n  const [gongsa, setGongsa] = useState([]);\n\n  useEffect(() => {\n    const q = query(\n      collection(dbService, \"gongsa\"), //gongsa(collection name)\n      orderBy(\"createdAt\", \"desc\")\n    );\n    onSnapshot(q, (snapshot) => {\n      const gongsaArr = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setGongsa(gongsaArr);\n    });\n  }, []);\n\n  return (\n    <div>\n      <Register userObj={userObj} />\n      <ReadGongsa />\n    </div>\n  );\n};\n\nexport default Home;\n","/Users/ming/Desktop/workspace/gongsa/src/components/ReadGongsa.js",[],[],{"ruleId":"75","severity":1,"message":"76","line":6,"column":3,"nodeType":"77","messageId":"78","endLine":6,"endColumn":9},{"ruleId":"75","severity":1,"message":"79","line":52,"column":10,"nodeType":"77","messageId":"78","endLine":52,"endColumn":15},{"ruleId":"75","severity":1,"message":"80","line":60,"column":10,"nodeType":"77","messageId":"78","endLine":60,"endColumn":17},{"ruleId":"75","severity":1,"message":"81","line":10,"column":9,"nodeType":"77","messageId":"78","endLine":10,"endColumn":24},{"ruleId":"75","severity":1,"message":"82","line":11,"column":9,"nodeType":"77","messageId":"78","endLine":11,"endColumn":29},{"ruleId":"75","severity":1,"message":"83","line":71,"column":15,"nodeType":"77","messageId":"78","endLine":71,"endColumn":19},{"ruleId":"75","severity":1,"message":"84","line":6,"column":26,"nodeType":"77","messageId":"78","endLine":6,"endColumn":43},{"ruleId":"75","severity":1,"message":"85","line":1,"column":17,"nodeType":"77","messageId":"78","endLine":1,"endColumn":26},{"ruleId":"75","severity":1,"message":"86","line":10,"column":10,"nodeType":"77","messageId":"78","endLine":10,"endColumn":17},{"ruleId":"75","severity":1,"message":"87","line":10,"column":19,"nodeType":"77","messageId":"78","endLine":10,"endColumn":29},{"ruleId":"88","severity":1,"message":"89","line":101,"column":13,"nodeType":"90","endLine":101,"endColumn":64},{"ruleId":"75","severity":1,"message":"91","line":4,"column":8,"nodeType":"77","messageId":"78","endLine":4,"endColumn":16},{"ruleId":"75","severity":1,"message":"92","line":18,"column":7,"nodeType":"77","messageId":"78","endLine":18,"endColumn":10},{"ruleId":"75","severity":1,"message":"93","line":5,"column":3,"nodeType":"77","messageId":"78","endLine":5,"endColumn":9},{"ruleId":"75","severity":1,"message":"94","line":14,"column":10,"nodeType":"77","messageId":"78","endLine":14,"endColumn":16},"no-unused-vars","'Outlet' is defined but never used.","Identifier","unusedVar","'About' is defined but never used.","'NoMatch' is defined but never used.","'phoneNumberTest' is assigned a value but never used.","'testVerificationCode' is assigned a value but never used.","'user' is assigned a value but never used.","'setNewDisplayName' is assigned a value but never used.","'useEffect' is defined but never used.","'gongsas' is assigned a value but never used.","'setGongsas' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'firebase' is defined but never used.","'app' is assigned a value but never used.","'addDoc' is defined but never used.","'gongsa' is assigned a value but never used."]