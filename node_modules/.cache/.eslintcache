[{"C:\\workspace\\nitgongsa\\src\\index.js":"1","C:\\workspace\\nitgongsa\\src\\App.js":"2","C:\\workspace\\nitgongsa\\src\\components\\Router.js":"3","C:\\workspace\\nitgongsa\\src\\fbase.js":"4","C:\\workspace\\nitgongsa\\src\\components\\Navigation.js":"5","C:\\workspace\\nitgongsa\\src\\routes\\Home.js":"6","C:\\workspace\\nitgongsa\\src\\routes\\Auth.js":"7","C:\\workspace\\nitgongsa\\src\\routes\\Profile.js":"8","C:\\workspace\\nitgongsa\\src\\components\\Register.js":"9","C:\\workspace\\nitgongsa\\src\\components\\ReadGongsa.js":"10"},{"size":540,"mtime":1652309796894,"results":"11","hashOfConfig":"12"},{"size":1182,"mtime":1652309796887,"results":"13","hashOfConfig":"12"},{"size":1885,"mtime":1652309796892,"results":"14","hashOfConfig":"12"},{"size":717,"mtime":1652072551550,"results":"15","hashOfConfig":"12"},{"size":760,"mtime":1652309796889,"results":"16","hashOfConfig":"12"},{"size":866,"mtime":1652317358502,"results":"17","hashOfConfig":"12"},{"size":3304,"mtime":1652309796895,"results":"18","hashOfConfig":"12"},{"size":489,"mtime":1652309796898,"results":"19","hashOfConfig":"12"},{"size":6706,"mtime":1652424573924,"results":"20","hashOfConfig":"12"},{"size":3635,"mtime":1652425125018,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"26"},"q2m3sx",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"26"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\workspace\\nitgongsa\\src\\index.js",["59","60"],[],"import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport App from \"App\";\r\nimport Geocode from \"react-geocode\";\r\nimport firebase from \"firebase/compat/app\";\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n",[],"C:\\workspace\\nitgongsa\\src\\App.js",[],[],"C:\\workspace\\nitgongsa\\src\\components\\Router.js",["61","62","63"],[],"import React from \"react\";\r\nimport {\r\n  HashRouter as Router,\r\n  Routes,\r\n  Route,\r\n  Outlet,\r\n  Link,\r\n  Navigate,\r\n} from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"components/Navigation\";\r\n\r\nexport default function AppRouter({ isLoggedIn, userObj, refreshUser }) {\r\n  return (\r\n    <div>\r\n      <h1>사외공사장 테스트</h1>\r\n      {/* Routes nest inside one another. Nested route paths build upon\r\n            parent route paths, and nested route elements render inside\r\n            parent route elements. See the note about <Outlet> below. */}\r\n      <Router>\r\n        <Routes>\r\n          {isLoggedIn ? (\r\n            <>\r\n              <Route path=\"/\" element={<Navigation />}>\r\n                <Route index element={<Home userObj={userObj} />} />\r\n                <Route\r\n                  path=\"profile\"\r\n                  element={\r\n                    <Profile userObj={userObj} refreshUser={refreshUser} />\r\n                  }\r\n                />\r\n                {/* Using path=\"*\"\" means \"match anything\", so this route\r\n                acts like a catch-all for URLs that we don't have explicit\r\n                routes for. */}\r\n              </Route>\r\n              <Route path=\"*\" element={<Navigate replace to=\"/\" />} />\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Route exact path=\"/\" element={<Auth />} />\r\n              <Route path=\"*\" element={<Navigate replace to=\"/\" />} />\r\n            </>\r\n          )}\r\n        </Routes>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction About() {\r\n  return (\r\n    <div>\r\n      <h2>About</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction NoMatch() {\r\n  return (\r\n    <div>\r\n      <h2>Nothing to see here!</h2>\r\n      <p>\r\n        <Link to=\"/\">Go to the home page</Link>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n","C:\\workspace\\nitgongsa\\src\\fbase.js",["64"],[],"import { initializeApp } from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\nimport { getStorage } from \"firebase/storage\";\r\n\r\n\r\n// push testing\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDFJzAEwTuo4my8nQ4fsIS_ktyXv2YhN4g\",\r\n  authDomain: \"gongsa-d233a.firebaseapp.com\",\r\n  projectId: \"gongsa-d233a\",\r\n  storageBucket: \"gongsa-d233a.appspot.com\",\r\n  messagingSenderId: \"772155270923\",\r\n  appId: \"1:772155270923:web:d64c6b9118ca3cfee8640e\",\r\n  measurementId: \"G-7F6MDW2NBE\"\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\n\r\nexport const authService = getAuth();\r\nexport const dbService = getFirestore();\r\nexport const storageService = getStorage();\r\n","C:\\workspace\\nitgongsa\\src\\components\\Navigation.js",[],[],"C:\\workspace\\nitgongsa\\src\\routes\\Home.js",["65","66"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { dbService } from \"fbase\";\r\nimport {\r\n  collection,\r\n  addDoc,\r\n  query,\r\n  onSnapshot,\r\n  orderBy,\r\n} from \"firebase/firestore\";\r\nimport Register from \"components/Register\";\r\nimport ReadGongsa from \"components/ReadGongsa\";\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [gongsa, setGongsa] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const q = query(\r\n      collection(dbService, \"gongsa\"), //gongsa(collection name)\r\n      orderBy(\"createdAt\", \"desc\")\r\n    );\r\n    onSnapshot(q, (snapshot) => {\r\n      const gongsaArr = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      setGongsa(gongsaArr);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Register userObj={userObj} />\r\n      <ReadGongsa userObj={userObj} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\workspace\\nitgongsa\\src\\routes\\Auth.js",["67","68","69"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { authService } from \"fbase\";\r\nimport { RecaptchaVerifier, signInWithPhoneNumber } from \"firebase/auth\";\r\n\r\nconst Auth = () => {\r\n  const [phoneNumber, setPhonenumber] = useState(\"\");\r\n  const [codeNumber, setCodeNumber] = useState(\"\");\r\n  const [isSendSMS, setIsSendSms] = useState(\"\");\r\n  const appVerifier = window.recaptchaVerifier;\r\n  const phoneNumberTest = \"+16505551234\";\r\n  const testVerificationCode = \"123456\";\r\n  const onChanged = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"phone\") {\r\n      setPhonenumber(value);\r\n    } else if (name === \"code\") {\r\n      setCodeNumber(value);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    window.recaptchaVerifier = new RecaptchaVerifier(\r\n      \"recaptcha-container\",\r\n      {\r\n        size: \"invisible\",\r\n        callback: (response) => {\r\n          // reCAPTCHA solved, allow signInWithPhoneNumber.\r\n        },\r\n      },\r\n      authService\r\n    );\r\n  }, []);\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    authService.languageCode = \"ko\";\r\n    // window.recaptchaVerifier = new RecaptchaVerifier(\r\n    //   \"recaptcha-container\",\r\n    //   {},\r\n    //   authService\r\n    // );\r\n    signInWithPhoneNumber(authService, \"+82\" + phoneNumber, appVerifier)\r\n      .then((confirmationResult) => {\r\n        setIsSendSms(true);\r\n        // SMS sent. Prompt user to type the code from the message, then sign the\r\n        // user in with confirmationResult.confirm(code).\r\n        window.confirmationResult = confirmationResult;\r\n        // ...\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        // Error; SMS not sent\r\n        // ...\r\n      });\r\n    // signInWithPhoneNumber(authService, phoneNumberTest, appVerifier)\r\n    //   .then(function (confirmationResult) {\r\n    //     // confirmationResult can resolve with the fictional testVerificationCode above.\r\n    //     return confirmationResult.confirm(testVerificationCode);\r\n    //   })\r\n    //   .catch(function (error) {\r\n    //     // Error; SMS not sent\r\n    //     // ...\r\n    //   });\r\n  };\r\n\r\n  const onCodeConfirmClick = (event) => {\r\n    window.confirmationResult\r\n      .confirm(codeNumber)\r\n      .then((result) => {\r\n        // User signed in successfully.\r\n        const user = result.user;\r\n        //console.log(user);\r\n        // ...\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n        // User couldn't sign in (bad verification code?)\r\n        // ...\r\n      });\r\n  };\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit}>\r\n        <input\r\n          name=\"phone\"\r\n          type=\"phone\"\r\n          placeholder=\"'-' 없이 입력\"\r\n          required\r\n          value={phoneNumber}\r\n          onChange={onChanged}\r\n        />\r\n        <input type=\"submit\" value=\"Log In\" />\r\n      </form>\r\n      {isSendSMS && (\r\n        <>\r\n          <input\r\n            name=\"code\"\r\n            type=\"text\"\r\n            placeholder=\"인증번호\"\r\n            required\r\n            value={codeNumber}\r\n            onChange={onChanged}\r\n          />\r\n          <button onClick={onCodeConfirmClick} value=\"인증번호확인\" />\r\n        </>\r\n      )}\r\n      <div id=\"recaptcha-container\"></div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","C:\\workspace\\nitgongsa\\src\\routes\\Profile.js",["70"],[],"import React, { useState } from \"react\";\r\nimport { authService } from \"fbase\";\r\n\r\nconst Profile = ({ userObj }) => {\r\n  console.log(userObj);\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n\r\n  const onLogOutClick = async () => await authService.signOut();\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <label>{newDisplayName}</label>\r\n      </div>\r\n\r\n      <button onClick={onLogOutClick}>Log Out</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","C:\\workspace\\nitgongsa\\src\\components\\Register.js",["71","72","73","74","75","76","77","78","79","80"],[],"C:\\workspace\\nitgongsa\\src\\components\\ReadGongsa.js",["81","82","83","84","85","86","87","88"],[],{"ruleId":"89","severity":1,"message":"90","line":4,"column":8,"nodeType":"91","messageId":"92","endLine":4,"endColumn":15},{"ruleId":"89","severity":1,"message":"93","line":5,"column":8,"nodeType":"91","messageId":"92","endLine":5,"endColumn":16},{"ruleId":"89","severity":1,"message":"94","line":6,"column":3,"nodeType":"91","messageId":"92","endLine":6,"endColumn":9},{"ruleId":"89","severity":1,"message":"95","line":52,"column":10,"nodeType":"91","messageId":"92","endLine":52,"endColumn":15},{"ruleId":"89","severity":1,"message":"96","line":60,"column":10,"nodeType":"91","messageId":"92","endLine":60,"endColumn":17},{"ruleId":"89","severity":1,"message":"97","line":18,"column":7,"nodeType":"91","messageId":"92","endLine":18,"endColumn":10},{"ruleId":"89","severity":1,"message":"98","line":5,"column":3,"nodeType":"91","messageId":"92","endLine":5,"endColumn":9},{"ruleId":"89","severity":1,"message":"99","line":14,"column":10,"nodeType":"91","messageId":"92","endLine":14,"endColumn":16},{"ruleId":"89","severity":1,"message":"100","line":10,"column":9,"nodeType":"91","messageId":"92","endLine":10,"endColumn":24},{"ruleId":"89","severity":1,"message":"101","line":11,"column":9,"nodeType":"91","messageId":"92","endLine":11,"endColumn":29},{"ruleId":"89","severity":1,"message":"102","line":71,"column":15,"nodeType":"91","messageId":"92","endLine":71,"endColumn":19},{"ruleId":"89","severity":1,"message":"103","line":6,"column":26,"nodeType":"91","messageId":"92","endLine":6,"endColumn":43},{"ruleId":"89","severity":1,"message":"104","line":1,"column":17,"nodeType":"91","messageId":"92","endLine":1,"endColumn":26},{"ruleId":"89","severity":1,"message":"105","line":3,"column":10,"nodeType":"91","messageId":"92","endLine":3,"endColumn":20},{"ruleId":"89","severity":1,"message":"98","line":3,"column":22,"nodeType":"91","messageId":"92","endLine":3,"endColumn":28},{"ruleId":"89","severity":1,"message":"106","line":18,"column":10,"nodeType":"91","messageId":"92","endLine":18,"endColumn":17},{"ruleId":"89","severity":1,"message":"107","line":18,"column":19,"nodeType":"91","messageId":"92","endLine":18,"endColumn":29},{"ruleId":"108","severity":1,"message":"109","line":41,"column":23,"nodeType":"110","messageId":"111","endLine":41,"endColumn":25},{"ruleId":"108","severity":1,"message":"109","line":125,"column":24,"nodeType":"110","messageId":"111","endLine":125,"endColumn":26},{"ruleId":"108","severity":1,"message":"109","line":136,"column":26,"nodeType":"110","messageId":"111","endLine":136,"endColumn":28},{"ruleId":"112","severity":1,"message":"113","line":164,"column":13,"nodeType":"114","messageId":"115","endLine":174,"endColumn":14},{"ruleId":"116","severity":1,"message":"117","line":212,"column":13,"nodeType":"118","endLine":212,"endColumn":64},{"ruleId":"89","severity":1,"message":"119","line":4,"column":3,"nodeType":"91","messageId":"92","endLine":4,"endColumn":8},{"ruleId":"89","severity":1,"message":"120","line":5,"column":3,"nodeType":"91","messageId":"92","endLine":5,"endColumn":13},{"ruleId":"89","severity":1,"message":"121","line":10,"column":3,"nodeType":"91","messageId":"92","endLine":10,"endColumn":13},{"ruleId":"89","severity":1,"message":"122","line":12,"column":21,"nodeType":"91","messageId":"92","endLine":12,"endColumn":35},{"ruleId":"89","severity":1,"message":"123","line":14,"column":10,"nodeType":"91","messageId":"92","endLine":14,"endColumn":15},{"ruleId":"89","severity":1,"message":"124","line":15,"column":10,"nodeType":"91","messageId":"92","endLine":15,"endColumn":13},{"ruleId":"89","severity":1,"message":"125","line":15,"column":15,"nodeType":"91","messageId":"92","endLine":15,"endColumn":27},{"ruleId":"126","severity":1,"message":"127","line":49,"column":6,"nodeType":"128","endLine":49,"endColumn":8,"suggestions":"129"},"no-unused-vars","'Geocode' is defined but never used.","Identifier","unusedVar","'firebase' is defined but never used.","'Outlet' is defined but never used.","'About' is defined but never used.","'NoMatch' is defined but never used.","'app' is assigned a value but never used.","'addDoc' is defined but never used.","'gongsa' is assigned a value but never used.","'phoneNumberTest' is assigned a value but never used.","'testVerificationCode' is assigned a value but never used.","'user' is assigned a value but never used.","'setNewDisplayName' is assigned a value but never used.","'useEffect' is defined but never used.","'collection' is defined but never used.","'gongsas' is assigned a value but never used.","'setGongsas' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'query' is defined but never used.","'onSnapshot' is defined but never used.","'documentId' is defined but never used.","'storageService' is defined but never used.","'async' is defined but never used.","'ref' is defined but never used.","'deleteObject' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getGongsaData'. Either include it or remove the dependency array.","ArrayExpression",["130"],{"desc":"131","fix":"132"},"Update the dependencies array to be: [getGongsaData]",{"range":"133","text":"134"},[1106,1108],"[getGongsaData]"]