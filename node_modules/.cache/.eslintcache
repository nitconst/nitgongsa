[{"/Users/ming/Desktop/workspace/gongsa/src/components/Router.js":"1","/Users/ming/Desktop/workspace/gongsa/src/components/Navigation.js":"2","/Users/ming/Desktop/workspace/gongsa/src/routes/Auth.js":"3","/Users/ming/Desktop/workspace/gongsa/src/routes/Profile.js":"4","/Users/ming/Desktop/workspace/gongsa/src/components/Register.js":"5","/Users/ming/Desktop/workspace/gongsa/src/index.js":"6","/Users/ming/Desktop/workspace/gongsa/src/App.js":"7","/Users/ming/Desktop/workspace/gongsa/src/fbase.js":"8","/Users/ming/Desktop/workspace/gongsa/src/routes/Home.js":"9","/Users/ming/Desktop/workspace/gongsa/src/components/ReadGongsa.js":"10"},{"size":1816,"mtime":1651479368046,"results":"11","hashOfConfig":"12"},{"size":731,"mtime":1651467724256,"results":"13","hashOfConfig":"12"},{"size":3191,"mtime":1651546281707,"results":"14","hashOfConfig":"12"},{"size":468,"mtime":1651546283817,"results":"15","hashOfConfig":"12"},{"size":2351,"mtime":1651546267623,"results":"16","hashOfConfig":"12"},{"size":487,"mtime":1651465584614,"results":"17","hashOfConfig":"12"},{"size":1133,"mtime":1651546280223,"results":"18","hashOfConfig":"12"},{"size":695,"mtime":1651214086403,"results":"19","hashOfConfig":"12"},{"size":799,"mtime":1651546282901,"results":"20","hashOfConfig":"12"},{"size":158,"mtime":1651465781753,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"26"},"16npvjw",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"26"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ming/Desktop/workspace/gongsa/src/components/Router.js",["57","58","59"],[],"import React from \"react\";\nimport {\n  HashRouter as Router,\n  Routes,\n  Route,\n  Outlet,\n  Link,\n  Navigate,\n} from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Profile from \"routes/Profile\";\nimport Navigation from \"components/Navigation\";\n\nexport default function AppRouter({ isLoggedIn, userObj, refreshUser }) {\n  return (\n    <div>\n      <h1>사외공사장 테스트</h1>\n      {/* Routes nest inside one another. Nested route paths build upon\n            parent route paths, and nested route elements render inside\n            parent route elements. See the note about <Outlet> below. */}\n      <Router>\n        <Routes>\n          {isLoggedIn ? (\n            <>\n              <Route path=\"/\" element={<Navigation />}>\n                <Route index element={<Home userObj={userObj} />} />\n                <Route\n                  path=\"profile\"\n                  element={\n                    <Profile userObj={userObj} refreshUser={refreshUser} />\n                  }\n                />\n                {/* Using path=\"*\"\" means \"match anything\", so this route\n                acts like a catch-all for URLs that we don't have explicit\n                routes for. */}\n              </Route>\n              <Route path=\"*\" element={<Navigate replace to=\"/\" />} />\n            </>\n          ) : (\n            <>\n              <Route exact path=\"/\" element={<Auth />} />\n              <Route path=\"*\" element={<Navigate replace to=\"/\" />} />\n            </>\n          )}\n        </Routes>\n      </Router>\n    </div>\n  );\n}\n\nfunction About() {\n  return (\n    <div>\n      <h2>About</h2>\n    </div>\n  );\n}\n\nfunction NoMatch() {\n  return (\n    <div>\n      <h2>Nothing to see here!</h2>\n      <p>\n        <Link to=\"/\">Go to the home page</Link>\n      </p>\n    </div>\n  );\n}\n",[],"/Users/ming/Desktop/workspace/gongsa/src/components/Navigation.js",[],[],"/Users/ming/Desktop/workspace/gongsa/src/routes/Auth.js",["60","61","62"],[],"import React, { useEffect, useState } from \"react\";\nimport { authService } from \"fbase\";\nimport { RecaptchaVerifier, signInWithPhoneNumber } from \"firebase/auth\";\n\nconst Auth = () => {\n  const [phoneNumber, setPhonenumber] = useState(\"\");\n  const [codeNumber, setCodeNumber] = useState(\"\");\n  const [isSendSMS, setIsSendSms] = useState(\"\");\n  const appVerifier = window.recaptchaVerifier;\n  const phoneNumberTest = \"+16505551234\";\n  const testVerificationCode = \"123456\";\n  const onChanged = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"phone\") {\n      setPhonenumber(value);\n    } else if (name === \"code\") {\n      setCodeNumber(value);\n    }\n  };\n  useEffect(() => {\n    window.recaptchaVerifier = new RecaptchaVerifier(\n      \"recaptcha-container\",\n      {\n        size: \"invisible\",\n        callback: (response) => {\n          // reCAPTCHA solved, allow signInWithPhoneNumber.\n        },\n      },\n      authService\n    );\n  }, []);\n  const onSubmit = (event) => {\n    event.preventDefault();\n    authService.languageCode = \"ko\";\n    // window.recaptchaVerifier = new RecaptchaVerifier(\n    //   \"recaptcha-container\",\n    //   {},\n    //   authService\n    // );\n    signInWithPhoneNumber(authService, \"+82\" + phoneNumber, appVerifier)\n      .then((confirmationResult) => {\n        setIsSendSms(true);\n        // SMS sent. Prompt user to type the code from the message, then sign the\n        // user in with confirmationResult.confirm(code).\n        window.confirmationResult = confirmationResult;\n        // ...\n      })\n      .catch((error) => {\n        console.log(error);\n        // Error; SMS not sent\n        // ...\n      });\n    // signInWithPhoneNumber(authService, phoneNumberTest, appVerifier)\n    //   .then(function (confirmationResult) {\n    //     // confirmationResult can resolve with the fictional testVerificationCode above.\n    //     return confirmationResult.confirm(testVerificationCode);\n    //   })\n    //   .catch(function (error) {\n    //     // Error; SMS not sent\n    //     // ...\n    //   });\n  };\n\n  const onCodeConfirmClick = (event) => {\n    window.confirmationResult\n      .confirm(codeNumber)\n      .then((result) => {\n        // User signed in successfully.\n        const user = result.user;\n        //console.log(user);\n        // ...\n      })\n      .catch((error) => {\n        //console.log(error);\n        // User couldn't sign in (bad verification code?)\n        // ...\n      });\n  };\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <input\n          name=\"phone\"\n          type=\"phone\"\n          placeholder=\"'-' 없이 입력\"\n          required\n          value={phoneNumber}\n          onChange={onChanged}\n        />\n        <input type=\"submit\" value=\"Log In\" />\n      </form>\n      {isSendSMS && (\n        <>\n          <input\n            name=\"code\"\n            type=\"text\"\n            placeholder=\"인증번호\"\n            required\n            value={codeNumber}\n            onChange={onChanged}\n          />\n          <button onClick={onCodeConfirmClick} value=\"인증번호확인\" />\n        </>\n      )}\n      <div id=\"recaptcha-container\"></div>\n    </>\n  );\n};\n\nexport default Auth;","/Users/ming/Desktop/workspace/gongsa/src/routes/Profile.js",["63"],[],"/Users/ming/Desktop/workspace/gongsa/src/components/Register.js",["64","65","66","67","68"],[],"import React, {useEffect, useRef, useState} from \"react\";\nimport { dbService, storageService } from \"../fbase\";\nimport { collection, addDoc } from \"firebase/firestore\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport EXIF from \"exif-js\";\n// import {auth} from \"firebase/auth\";\nimport { ref, uploadString, getDownloadURL } from \"firebase/storage\";\n\nconst Register = ({userObj}) => {\n  const [gongsa, setGongsa] = useState(\"\");\n  const [gongsas, setGongsas] = useState([]);\n  const [attachment, setAttachment] = useState(\"\")\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    let attachmentUrl = \"\";\n\n    if(attachment !== \"\"){\n    const attachmentRef = ref(storageService, `${userObj.uid}/${uuidv4()}`);\n    const response = await uploadString(\n      attachmentRef,\n      attachment, \n      \"data_url\"\n      );\n    attachmentUrl = await getDownloadURL(response.ref);\n    }\n\n    const gongsaObj = {\n      text: gongsa,\n      createdAt: Date.now(),\n      createdId: userObj.uid,\n      attachmentUrl,\n      // phoneNumber,\n    };\n    await addDoc(collection(dbService, \"gongsa\"), gongsaObj);\n    setGongsa(\"\");\n    setAttachment(\"\");\n};\n\n  const onChange = (event) => {\n    const {\n      target : {value}\n    } = event;\n    setGongsa(value);\n  };\n  const onFileChange = (event) => {\n    const {\n      target: {files},\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: {result},\n      } = finishedEvent;\n      setAttachment(result)\n    };\n    reader.readAsDataURL(theFile);\n};\n  const onClearAttachment = () => {\n    setAttachment(null)\n    fileInput.current.value = null;\n  }\n\n  const fileInput = useRef();\n\n\n  return(\n    <div>\n      <h2>민정씨 Component</h2>\n      <form onSubmit={onSubmit}>\n        <input\n          value={gongsa}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"공사 정보 입력\"\n        />\n        <input type=\"file\" accept=\"image/*\" onChange={onFileChange} ref={fileInput}/>  \n        <input type=\"submit\" value=\"submit\" />\n        {attachment && (\n        <div>\n        <img src={attachment} width=\"50px\" height=\"50px\" />\n        <button onClick={onClearAttachment}>Clear</button>\n        </div>\n        )}\n      </form>\n      </div>\n  );\n  };\n\nexport default Register;","/Users/ming/Desktop/workspace/gongsa/src/index.js",["69"],[],"/Users/ming/Desktop/workspace/gongsa/src/App.js",[],[],"/Users/ming/Desktop/workspace/gongsa/src/fbase.js",["70"],[],"/Users/ming/Desktop/workspace/gongsa/src/routes/Home.js",["71","72"],[],"import React, { useEffect, useState } from \"react\";\nimport { dbService } from \"fbase\";\nimport { collection, addDoc,  query, onSnapshot, orderBy } from \"firebase/firestore\";\nimport Register from \"components/Register\";\nimport ReadGongsa from \"components/ReadGongsa\";\n\nconst Home = ({userObj}) => {\n  const [gongsa, setGongsa] = useState([]);\n  \n  useEffect(() => {\n    const q = query(\n      collection(dbService, \"gongsa\"), //gongsa(collection name)\n      orderBy(\"createdAt\", \"desc\")\n    );\n    onSnapshot(q, (snapshot) => {\n      const gongsaArr = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setGongsa(gongsaArr);\n    });\n  }, []);\n\n  return (\n    <div>\n      <Register userObj={userObj}/>\n      <ReadGongsa />\n    </div>\n  );\n};\n\nexport default Home;\n","/Users/ming/Desktop/workspace/gongsa/src/components/ReadGongsa.js",[],[],{"ruleId":"73","severity":1,"message":"74","line":6,"column":3,"nodeType":"75","messageId":"76","endLine":6,"endColumn":9},{"ruleId":"73","severity":1,"message":"77","line":52,"column":10,"nodeType":"75","messageId":"76","endLine":52,"endColumn":15},{"ruleId":"73","severity":1,"message":"78","line":60,"column":10,"nodeType":"75","messageId":"76","endLine":60,"endColumn":17},{"ruleId":"73","severity":1,"message":"79","line":10,"column":9,"nodeType":"75","messageId":"76","endLine":10,"endColumn":24},{"ruleId":"73","severity":1,"message":"80","line":11,"column":9,"nodeType":"75","messageId":"76","endLine":11,"endColumn":29},{"ruleId":"73","severity":1,"message":"81","line":71,"column":15,"nodeType":"75","messageId":"76","endLine":71,"endColumn":19},{"ruleId":"73","severity":1,"message":"82","line":6,"column":26,"nodeType":"75","messageId":"76","endLine":6,"endColumn":43},{"ruleId":"73","severity":1,"message":"83","line":1,"column":16,"nodeType":"75","messageId":"76","endLine":1,"endColumn":25},{"ruleId":"73","severity":1,"message":"84","line":5,"column":8,"nodeType":"75","messageId":"76","endLine":5,"endColumn":12},{"ruleId":"73","severity":1,"message":"85","line":11,"column":10,"nodeType":"75","messageId":"76","endLine":11,"endColumn":17},{"ruleId":"73","severity":1,"message":"86","line":11,"column":19,"nodeType":"75","messageId":"76","endLine":11,"endColumn":29},{"ruleId":"87","severity":1,"message":"88","line":82,"column":9,"nodeType":"89","endLine":82,"endColumn":60},{"ruleId":"73","severity":1,"message":"90","line":4,"column":8,"nodeType":"75","messageId":"76","endLine":4,"endColumn":16},{"ruleId":"73","severity":1,"message":"91","line":18,"column":7,"nodeType":"75","messageId":"76","endLine":18,"endColumn":10},{"ruleId":"73","severity":1,"message":"92","line":3,"column":22,"nodeType":"75","messageId":"76","endLine":3,"endColumn":28},{"ruleId":"73","severity":1,"message":"93","line":8,"column":10,"nodeType":"75","messageId":"76","endLine":8,"endColumn":16},"no-unused-vars","'Outlet' is defined but never used.","Identifier","unusedVar","'About' is defined but never used.","'NoMatch' is defined but never used.","'phoneNumberTest' is assigned a value but never used.","'testVerificationCode' is assigned a value but never used.","'user' is assigned a value but never used.","'setNewDisplayName' is assigned a value but never used.","'useEffect' is defined but never used.","'EXIF' is defined but never used.","'gongsas' is assigned a value but never used.","'setGongsas' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'firebase' is defined but never used.","'app' is assigned a value but never used.","'addDoc' is defined but never used.","'gongsa' is assigned a value but never used."]