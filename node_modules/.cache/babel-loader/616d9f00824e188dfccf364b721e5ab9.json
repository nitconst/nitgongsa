{"ast":null,"code":"var _jsxFileName = \"/Users/ming/Desktop/workspace/gongsa/src/components/Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { dbService, storageService } from \"../fbase\";\nimport { collection, addDoc } from \"firebase/firestore\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport EXIF from \"exif-js\";\nimport { ref, uploadString, getDownloadURL } from \"firebase/storage\";\nimport Geocode from \"react-geocode\";\nimport MapPick from \"./MapPick\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nGeocode.setApiKey(\"AIzaSyBIWmLYzIJmYLxLoRsHchr0OAErLWpKcyI\");\nGeocode.setLanguage(\"ko\");\nGeocode.setRegion(\"kr\");\nGeocode.enableDebug(); //(보류) 모바일기기 체크박스 -> isIos(삼항연산자)로 조건, 컴포넌트 분리는 추후에\n\nconst Register = _ref => {\n  _s();\n\n  let {\n    userObj\n  } = _ref;\n  const [gongsa, setGongsa] = useState(\"\");\n  const [gongsas, setGongsas] = useState([]);\n  const [attachment, setAttachment] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  const [GPSla, setGPSLa] = useState([]); //위도\n\n  const [GPSlong, setGPSLong] = useState([]); //경도\n\n  const [address, setAddress] = useState(\"\"); //주소변환\n\n  const meta = useRef(null);\n\n  const onSubmit = async event => {\n    event.preventDefault();\n    let attachmentUrl = \"\";\n\n    if (attachment !== \"\") {\n      const attachmentRef = ref(storageService, `${userObj.uid}/${uuidv4()}`);\n      const response = await uploadString(attachmentRef, attachment, \"data_url\");\n      attachmentUrl = await getDownloadURL(response.ref);\n    } //attachment 유효성검사\n\n\n    if (attachmentUrl == \"\") {\n      alert(\"이미지 파일은 필수입니다.\");\n    }\n\n    const gongsaObj = {\n      text: gongsa,\n      createdAt: date,\n      GPSLatitude: GPSla,\n      GPSLongitude: GPSlong,\n      addr: address,\n      phone: userObj.displayName,\n      createdId: userObj.uid,\n      attachmentUrl,\n      code: 0 // 필드 태그 수정 필요\n\n    };\n    await addDoc(collection(dbService, \"gongsa\"), gongsaObj);\n    setGongsa(\"\");\n    setAttachment(\"\");\n  };\n\n  const onChange = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setGongsa(value);\n  };\n\n  const onFileChange = event => {\n    const {\n      target: {\n        files\n      }\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n\n    reader.onloadend = finishedEvent => {\n      const {\n        currentTarget: {\n          result\n        }\n      } = finishedEvent;\n      setAttachment(result);\n    };\n\n    reader.readAsDataURL(theFile);\n    meta.current = theFile;\n\n    if (theFile && theFile.name) {\n      EXIF.getData(theFile, function () {\n        let exifData = EXIF.pretty(this);\n        let gpsLa = EXIF.getTag(this, \"GPSLatitude\");\n        let gpsLaRef = EXIF.getTag(this, \"GPSLatitudeRef\");\n        let gpsLong = EXIF.getTag(this, \"GPSLongitude\");\n        let gpsLongRef = EXIF.getTag(this, \"GPSLongitudeRef\");\n        let la = [];\n        let long = []; //위경도 api 연동 변수\n\n        let a = \"\";\n        let b = \"\";\n\n        if (exifData) {\n          //exifdata 존재 시 gps 계산 수행\n          console.log(exifData);\n          console.log(gpsLa);\n          console.log(gpsLong);\n\n          for (let i = 0; i < gpsLa.length; i++) {\n            la[i] = gpsLa[i].numerator / gpsLa[i].denominator;\n          }\n\n          for (let i = 0; i < gpsLong.length; i++) {\n            long[i] = gpsLong[i].numerator / gpsLong[i].denominator;\n          } //값 확인 콘솔\n\n\n          console.log(la, long, gpsLaRef, gpsLongRef); //사진 시각 정보 설정\n\n          setDate(EXIF.getTag(this, \"DateTime\")); //ref 조건 별 위경도 계산\n\n          if (gpsLaRef == \"N\") {\n            a = parseInt(la[0]) + (60 * parseInt(la[1]) + parseFloat(la[2])) / 3600;\n          } else {\n            a = -1 * parseInt(la[0]) + (-60 * parseInt(la[1]) + -1 * parseFloat(la[2])) / 3600;\n          }\n\n          setGPSLa(a);\n\n          if (gpsLongRef == \"E\") {\n            b = parseInt(long[0]) + (60 * parseInt(long[1]) + parseFloat(long[2])) / 3600;\n          } else {\n            b = -1 * parseInt(long[0]) + (-60 * parseInt(long[1]) + -1 * parseFloat(long[2])) / 3600;\n          }\n\n          setGPSLong(b);\n        } else {\n          console.log(\"No EXIF data found in image '\" + theFile.name + \"'.\");\n        } //주소변환 실행\n\n\n        setFileData(a, b);\n      });\n    }\n  }; //주소변환함수\n\n\n  const setFileData = (a, b) => {\n    const {\n      kakao\n    } = window;\n    console.log(GPSla, GPSlong);\n    let geocoder = new kakao.maps.services.Geocoder();\n    let coord = new kakao.maps.LatLng(a, b);\n\n    let callback = function (result, status) {\n      if (status === kakao.maps.services.Status.OK) {\n        if (result[0].road_address.address_name) {\n          console.log(result[0].road_address.region_3depth_name);\n          setAddress(result[0].road_address.address_name);\n        } else {\n          console.log(result[0].address.address_name);\n          setAddress(result[0].address.address_name);\n        }\n      }\n    };\n\n    geocoder.coord2Address(coord.getLng(), coord.getLat(), callback);\n  };\n\n  const onClearAttachment = () => {\n    setAttachment(null);\n    fileInput.current.value = null;\n  };\n\n  const fileInput = useRef();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uBBFC\\uC815\\uC528 Component\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: gongsa,\n        onChange: onChange,\n        type: \"text\",\n        placeholder: \"\\uACF5\\uC0AC \\uC81C\\uBAA9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: onFileChange,\n        ref: fileInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), attachment && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: attachment,\n          width: \"50px\",\n          height: \"50px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClearAttachment,\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }, this), console.log(meta), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), \"Time : \", date, /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), \"GPSLatitude : \", GPSla, /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), \"GPSLongitude : \", GPSlong, /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), \"Addr : \", address]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Register, \"t2qN5u2Ai958ZNkzdX5i5RQ5WJE=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/ming/Desktop/workspace/gongsa/src/components/Register.js"],"names":["React","useEffect","useRef","useState","dbService","storageService","collection","addDoc","v4","uuidv4","EXIF","ref","uploadString","getDownloadURL","Geocode","MapPick","setApiKey","setLanguage","setRegion","enableDebug","Register","userObj","gongsa","setGongsa","gongsas","setGongsas","attachment","setAttachment","date","setDate","GPSla","setGPSLa","GPSlong","setGPSLong","address","setAddress","meta","onSubmit","event","preventDefault","attachmentUrl","attachmentRef","uid","response","alert","gongsaObj","text","createdAt","GPSLatitude","GPSLongitude","addr","phone","displayName","createdId","code","onChange","target","value","onFileChange","files","theFile","reader","FileReader","onloadend","finishedEvent","currentTarget","result","readAsDataURL","current","name","getData","exifData","pretty","gpsLa","getTag","gpsLaRef","gpsLong","gpsLongRef","la","long","a","b","console","log","i","length","numerator","denominator","parseInt","parseFloat","setFileData","kakao","window","geocoder","maps","services","Geocoder","coord","LatLng","callback","status","Status","OK","road_address","address_name","region_3depth_name","coord2Address","getLng","getLat","onClearAttachment","fileInput"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { dbService, storageService } from \"../fbase\";\nimport { collection, addDoc } from \"firebase/firestore\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport EXIF from \"exif-js\";\nimport { ref, uploadString, getDownloadURL } from \"firebase/storage\";\nimport Geocode from \"react-geocode\";\n\nimport MapPick from \"./MapPick\";\n\nGeocode.setApiKey(\"AIzaSyBIWmLYzIJmYLxLoRsHchr0OAErLWpKcyI\");\nGeocode.setLanguage(\"ko\");\nGeocode.setRegion(\"kr\");\nGeocode.enableDebug();\n\n//(보류) 모바일기기 체크박스 -> isIos(삼항연산자)로 조건, 컴포넌트 분리는 추후에\n\nconst Register = ({ userObj }) => {\n  const [gongsa, setGongsa] = useState(\"\");\n  const [gongsas, setGongsas] = useState([]);\n  const [attachment, setAttachment] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  const [GPSla, setGPSLa] = useState([]); //위도\n  const [GPSlong, setGPSLong] = useState([]); //경도\n  const [address, setAddress] = useState(\"\"); //주소변환\n\n  const meta = useRef(null);\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    let attachmentUrl = \"\";\n\n    if (attachment !== \"\") {\n      const attachmentRef = ref(storageService, `${userObj.uid}/${uuidv4()}`);\n      const response = await uploadString(\n        attachmentRef,\n        attachment,\n        \"data_url\"\n      );\n      attachmentUrl = await getDownloadURL(response.ref);\n    }\n    //attachment 유효성검사\n    if (attachmentUrl == \"\") {\n      alert(\"이미지 파일은 필수입니다.\");\n    }\n\n    const gongsaObj = {\n      text: gongsa,\n      createdAt: date,\n      GPSLatitude: GPSla,\n      GPSLongitude: GPSlong,\n      addr: address,\n      phone: userObj.displayName,\n      createdId: userObj.uid,\n      attachmentUrl,\n      code: 0,\n      // 필드 태그 수정 필요\n    };\n    await addDoc(collection(dbService, \"gongsa\"), gongsaObj);\n    setGongsa(\"\");\n    setAttachment(\"\");\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setGongsa(value);\n  };\n\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n    meta.current = theFile;\n\n    if (theFile && theFile.name) {\n      EXIF.getData(theFile, function () {\n        let exifData = EXIF.pretty(this);\n        let gpsLa = EXIF.getTag(this, \"GPSLatitude\");\n        let gpsLaRef = EXIF.getTag(this, \"GPSLatitudeRef\");\n        let gpsLong = EXIF.getTag(this, \"GPSLongitude\");\n        let gpsLongRef = EXIF.getTag(this, \"GPSLongitudeRef\");\n\n        let la = [];\n        let long = [];\n\n        //위경도 api 연동 변수\n        let a = \"\";\n        let b = \"\";\n\n        if (exifData) {\n          //exifdata 존재 시 gps 계산 수행\n          console.log(exifData);\n          console.log(gpsLa);\n          console.log(gpsLong);\n          for (let i = 0; i < gpsLa.length; i++) {\n            la[i] = gpsLa[i].numerator / gpsLa[i].denominator;\n          }\n          for (let i = 0; i < gpsLong.length; i++) {\n            long[i] = gpsLong[i].numerator / gpsLong[i].denominator;\n          }\n\n          //값 확인 콘솔\n          console.log(la, long, gpsLaRef, gpsLongRef);\n\n          //사진 시각 정보 설정\n          setDate(EXIF.getTag(this, \"DateTime\"));\n\n          //ref 조건 별 위경도 계산\n          if (gpsLaRef == \"N\") {\n            a =\n              parseInt(la[0]) +\n              (60 * parseInt(la[1]) + parseFloat(la[2])) / 3600;\n          } else {\n            a =\n              -1 * parseInt(la[0]) +\n              (-60 * parseInt(la[1]) + -1 * parseFloat(la[2])) / 3600;\n          }\n          setGPSLa(a);\n\n          if (gpsLongRef == \"E\") {\n            b =\n              parseInt(long[0]) +\n              (60 * parseInt(long[1]) + parseFloat(long[2])) / 3600;\n          } else {\n            b =\n              -1 * parseInt(long[0]) +\n              (-60 * parseInt(long[1]) + -1 * parseFloat(long[2])) / 3600;\n          }\n          setGPSLong(b);\n        } else {\n          console.log(\"No EXIF data found in image '\" + theFile.name + \"'.\");\n        }\n        //주소변환 실행\n        setFileData(a, b);\n      });\n    }\n  };\n\n  //주소변환함수\n  const setFileData = (a, b) => {\n    const { kakao } = window;\n    console.log(GPSla, GPSlong);\n    let geocoder = new kakao.maps.services.Geocoder();\n\n    let coord = new kakao.maps.LatLng(a, b);\n    let callback = function (result, status) {\n      if (status === kakao.maps.services.Status.OK) {\n        if (result[0].road_address.address_name) {\n          console.log(result[0].road_address.region_3depth_name);\n          setAddress(result[0].road_address.address_name);\n        } else {\n          console.log(result[0].address.address_name);\n          setAddress(result[0].address.address_name);\n        }\n      }\n    };\n    geocoder.coord2Address(coord.getLng(), coord.getLat(), callback);\n  };\n\n  const onClearAttachment = () => {\n    setAttachment(null);\n    fileInput.current.value = null;\n  };\n\n  const fileInput = useRef();\n\n  return (\n    <div>\n      <h2>민정씨 Component</h2>\n      <form onSubmit={onSubmit}>\n        <textarea\n          value={gongsa}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"공사 제목\"\n        />\n        <input\n          type=\"file\"\n          accept=\"image/*\"\n          onChange={onFileChange}\n          ref={fileInput}\n        />\n        <hr />\n        <input type=\"submit\" value=\"submit\" />\n        {attachment && (\n          <div>\n            <img src={attachment} width=\"50px\" height=\"50px\" />\n            <button onClick={onClearAttachment}>Clear</button>\n          </div>\n        )}\n        {console.log(meta)}\n        <hr />\n        Time : {date}\n        <hr />\n        GPSLatitude : {GPSla}\n        <hr />\n        GPSLongitude : {GPSlong}\n        <hr />\n        Addr : {address}\n      </form>\n    </div>\n  );\n};\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}