{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\nitgongsa\\\\src\\\\components\\\\ReadGongsa.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { collection, query, onSnapshot, getDocs, deleteDoc, updateDoc, doc } from \"firebase/firestore\";\nimport { dbService } from \"fbase\";\nimport styled from \"styled-components\";\nimport { async } from \"@firebase/util\";\nimport { ref, deleteObject } from \"firebase/storage\"; //style 적용\n// const StyledUl = styled.ul`\n//   display: inline-block;\n//   list-style: none;\n//   background-color: skyblue;\n//   width: 800px;\n//   border: 1px solid gray;\n//   text-align: center;\n//   border-radius: 25px;\n//   margin-right: 20px;\n// `;\n// const StyledLi = styled.li`\n//   display: inline-block;\n//   height: 50px;\n//   line-height: 50px;\n//   font-weight: bold;\n//   padding: 0px;\n// `;\n// const StyledTime = styled.li`\n//   text-align: right;\n// `;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Img = styled.img`\n  height: 200px;\n  border: none;\n`; //firestore data 호출\n\n_c = Img;\n\nconst ReadGongsa = _ref => {\n  _s();\n\n  let {\n    userObj,\n    isOwner\n  } = _ref;\n  const [gongsaList, setGongsaList] = useState([]);\n  const gongsaRef = doc(dbService, \"gongsa\", `${gongsaList}`);\n  useEffect(() => {\n    getGongsaData();\n  }, []);\n\n  const getGongsaData = async () => {\n    const querySnapshot = await getDocs(collection(dbService, \"gongsa\"));\n    const querySnapshotArray = [];\n    querySnapshot.forEach(doc => {\n      querySnapshotArray.push(doc.data());\n    });\n    setGongsaList(querySnapshotArray);\n  }; //수정, 삭제 작업\n\n\n  const handleEdit = () => {\n    console.log(\"안녕 나는 수정버튼\"); // 수정기능\n    // 1. 전체 배열중에서 선택한 객체를 찾는다.\n    // 2. 객체의 키값을 얻어낸다.\n    // 3. 수정되는 부분.\n    // 3. 1 Storage에 존재하는 사진을 변경하는 경우\n    // 3.1.1 아마 docs 자체에 함수 존재할 것 같은데.\n    // 3.1.2 사진을 새로 올리니까 새로운 시간을 반영해야됨.\n    // 3.2 Text를 변경하는 경우\n    // 3.2.1 해당 객체의 텍스트를 변경해서 put하기.\n    // 3.2.2 docs에 내용 존재\n    // 4. 그 이후에 새로고침을 시킨다.\n    // window.location.reload();\n  };\n\n  const handleCancle = () => {\n    console.log(\"안녕 나는 취소버튼\"); // 삭제기능\n\n    const ok = window.confirm(\"정말 삭제하시겠습니까?\");\n    console.log({\n      gongsaRef\n    }); // if (ok){\n    //   await deleteDoc(d)\n    // }\n    // window.location.reload();\n  }; //firestore data 표시\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD604\\uC131\\uC528 Component\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), gongsaList.map((el, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: el.addr\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: el.createdAt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Img, {\n          src: el.attachmentUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), userObj.uid === el.createdId ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            handleEdit();\n          },\n          children: \"\\uC218\\uC815\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            handleCancle();\n          },\n          children: \"\\uC0AD\\uC81C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : \"\"]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ReadGongsa, \"XxldKGtTGrqhv5GW1Q/VTRspINY=\");\n\n_c2 = ReadGongsa;\nexport default ReadGongsa;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Img\");\n$RefreshReg$(_c2, \"ReadGongsa\");","map":{"version":3,"sources":["C:/workspace/nitgongsa/src/components/ReadGongsa.js"],"names":["React","useEffect","useState","collection","query","onSnapshot","getDocs","deleteDoc","updateDoc","doc","dbService","styled","async","ref","deleteObject","Img","img","ReadGongsa","userObj","isOwner","gongsaList","setGongsaList","gongsaRef","getGongsaData","querySnapshot","querySnapshotArray","forEach","push","data","handleEdit","console","log","handleCancle","ok","window","confirm","map","el","index","addr","createdAt","attachmentUrl","uid","createdId"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  collection,\r\n  query,\r\n  onSnapshot,\r\n  getDocs,\r\n  deleteDoc,\r\n  updateDoc,\r\n  doc,\r\n} from \"firebase/firestore\";\r\nimport { dbService } from \"fbase\";\r\nimport styled from \"styled-components\";\r\nimport { async } from \"@firebase/util\";\r\nimport { ref, deleteObject } from \"firebase/storage\";\r\n\r\n//style 적용\r\n// const StyledUl = styled.ul`\r\n//   display: inline-block;\r\n//   list-style: none;\r\n//   background-color: skyblue;\r\n//   width: 800px;\r\n//   border: 1px solid gray;\r\n//   text-align: center;\r\n//   border-radius: 25px;\r\n//   margin-right: 20px;\r\n// `;\r\n// const StyledLi = styled.li`\r\n//   display: inline-block;\r\n//   height: 50px;\r\n//   line-height: 50px;\r\n//   font-weight: bold;\r\n//   padding: 0px;\r\n// `;\r\n// const StyledTime = styled.li`\r\n//   text-align: right;\r\n// `;\r\nconst Img = styled.img`\r\n  height: 200px;\r\n  border: none;\r\n`;\r\n\r\n//firestore data 호출\r\nconst ReadGongsa = ({ userObj, isOwner }) => {\r\n  const [gongsaList, setGongsaList] = useState([]);\r\n  const gongsaRef = doc(dbService, \"gongsa\", `${gongsaList}`);\r\n\r\n  useEffect(() => {\r\n    getGongsaData();\r\n  }, []);\r\n\r\n  const getGongsaData = async () => {\r\n    const querySnapshot = await getDocs(collection(dbService, \"gongsa\"));\r\n    const querySnapshotArray = [];\r\n    querySnapshot.forEach((doc) => {\r\n      querySnapshotArray.push(doc.data());\r\n    });\r\n\r\n    setGongsaList(querySnapshotArray);\r\n  };\r\n\r\n  //수정, 삭제 작업\r\n\r\n  const handleEdit = () => {\r\n    console.log(\"안녕 나는 수정버튼\");\r\n    // 수정기능\r\n    // 1. 전체 배열중에서 선택한 객체를 찾는다.\r\n    // 2. 객체의 키값을 얻어낸다.\r\n    // 3. 수정되는 부분.\r\n    // 3. 1 Storage에 존재하는 사진을 변경하는 경우\r\n    // 3.1.1 아마 docs 자체에 함수 존재할 것 같은데.\r\n    // 3.1.2 사진을 새로 올리니까 새로운 시간을 반영해야됨.\r\n    // 3.2 Text를 변경하는 경우\r\n    // 3.2.1 해당 객체의 텍스트를 변경해서 put하기.\r\n    // 3.2.2 docs에 내용 존재\r\n    // 4. 그 이후에 새로고침을 시킨다.\r\n    // window.location.reload();\r\n  };\r\n  const handleCancle = () => {\r\n    console.log(\"안녕 나는 취소버튼\");\r\n    // 삭제기능\r\n    const ok = window.confirm(\"정말 삭제하시겠습니까?\");\r\n    console.log({ gongsaRef });\r\n    // if (ok){\r\n    //   await deleteDoc(d)\r\n    // }\r\n    // window.location.reload();\r\n  };\r\n\r\n  //firestore data 표시\r\n  return (\r\n    <div>\r\n      <h2>현성씨 Component</h2>\r\n      {gongsaList.map((el, index) => (\r\n        <div key={index}>\r\n          <ul>\r\n            <li>{el.addr}</li>\r\n            <li>{el.createdAt}</li>\r\n          </ul>\r\n          <li>\r\n            <Img src={el.attachmentUrl} />\r\n          </li>\r\n          {userObj.uid === el.createdId ? (\r\n            <>\r\n              <button\r\n                onClick={() => {\r\n                  handleEdit();\r\n                }}\r\n              >\r\n                수정\r\n              </button>\r\n              <button\r\n                onClick={() => {\r\n                  handleCancle();\r\n                }}\r\n              >\r\n                삭제\r\n              </button>\r\n            </>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReadGongsa;\r\n"]},"metadata":{},"sourceType":"module"}