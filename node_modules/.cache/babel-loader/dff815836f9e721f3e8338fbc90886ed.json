{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\nitgongsa\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    authService.onAuthStateChanged(user => {\n      //유저상태변화 정보\n      if (user) {\n        setIsLoggedIn(true);\n        setUserObj({\n          displayName: user.phoneNumber,\n          //로그인 시 폰 넘버\n          uid: user.uid //파이어베이스 제공 식별자\n\n        });\n      } else {\n        setIsLoggedIn(false);\n      }\n\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.phoneNumber,\n      uid: user.uid\n    });\n  };\n\n  console.log(userObj);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: init ? /*#__PURE__*/_jsxDEV(AppRouter, {\n      isLoggedIn: isLoggedIn,\n      refreshUser: refreshUser,\n      userObj: userObj //관리\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this) : \"Initializing...\"\n  }, void 0, false);\n}\n\n_s(App, \"rv9L7SS/8p5BLtMryMyDCIzqvGE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/workspace/nitgongsa/src/App.js"],"names":["useEffect","useState","AppRouter","authService","App","init","setInit","userObj","setUserObj","isLoggedIn","setIsLoggedIn","onAuthStateChanged","user","displayName","phoneNumber","uid","refreshUser","currentUser","console","log"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,SAASC,WAAT,QAA4B,OAA5B;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,KAAD,CAA5C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,WAAW,CAACQ,kBAAZ,CAAgCC,IAAD,IAAU;AACvC;AACA,UAAIA,IAAJ,EAAU;AACRF,QAAAA,aAAa,CAAC,IAAD,CAAb;AACAF,QAAAA,UAAU,CAAC;AACTK,UAAAA,WAAW,EAAED,IAAI,CAACE,WADT;AACsB;AAC/BC,UAAAA,GAAG,EAAEH,IAAI,CAACG,GAFD,CAEM;;AAFN,SAAD,CAAV;AAID,OAND,MAMO;AACLL,QAAAA,aAAa,CAAC,KAAD,CAAb;AACD;;AACDJ,MAAAA,OAAO,CAAC,IAAD,CAAP;AACD,KAZD;AAaD,GAdQ,EAcN,EAdM,CAAT;;AAgBA,QAAMU,WAAW,GAAG,MAAM;AACxB,UAAMJ,IAAI,GAAGT,WAAW,CAACc,WAAzB;AACAT,IAAAA,UAAU,CAAC;AACTK,MAAAA,WAAW,EAAED,IAAI,CAACE,WADT;AAETC,MAAAA,GAAG,EAAEH,IAAI,CAACG;AAFD,KAAD,CAAV;AAID,GAND;;AAOAG,EAAAA,OAAO,CAACC,GAAR,CAAYZ,OAAZ;AACA,sBACE;AAAA,cACGF,IAAI,gBACH,QAAC,SAAD;AACE,MAAA,UAAU,EAAEI,UADd;AAEE,MAAA,WAAW,EAAEO,WAFf;AAGE,MAAA,OAAO,EAAET,OAHX,CAGoB;;AAHpB;AAAA;AAAA;AAAA;AAAA,YADG,GAOH;AARJ,mBADF;AAaD;;GA1CQH,G;;KAAAA,G;AA4CT,eAAeA,GAAf","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport AppRouter from \"components/Router\";\r\nimport { authService } from \"fbase\";\r\n\r\nfunction App() {\r\n  const [init, setInit] = useState(false);\r\n  const [userObj, setUserObj] = useState(null);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  useEffect(() => {\r\n    authService.onAuthStateChanged((user) => {\r\n      //유저상태변화 정보\r\n      if (user) {\r\n        setIsLoggedIn(true);\r\n        setUserObj({\r\n          displayName: user.phoneNumber, //로그인 시 폰 넘버\r\n          uid: user.uid, //파이어베이스 제공 식별자\r\n        });\r\n      } else {\r\n        setIsLoggedIn(false);\r\n      }\r\n      setInit(true);\r\n    });\r\n  }, []);\r\n\r\n  const refreshUser = () => {\r\n    const user = authService.currentUser;\r\n    setUserObj({\r\n      displayName: user.phoneNumber,\r\n      uid: user.uid,\r\n    });\r\n  };\r\n  console.log(userObj);\r\n  return (\r\n    <>\r\n      {init ? (\r\n        <AppRouter\r\n          isLoggedIn={isLoggedIn}\r\n          refreshUser={refreshUser}\r\n          userObj={userObj} //관리\r\n        />\r\n      ) : (\r\n        \"Initializing...\"\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}